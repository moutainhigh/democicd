<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uwallet.pay.main.dao.QrPayFlowDAO">

  <resultMap id="qrPayFlowMap" type="com.uwallet.pay.main.model.entity.QrPayFlow">
    <id property="id" jdbcType="BIGINT" column="id"/>
    <result property="gatewayId" jdbcType="BIGINT" column="gateway_id"/>
    <result property="payUserId" jdbcType="BIGINT" column="pay_user_id"/>
    <result property="payUserType" jdbcType="TINYINT" column="pay_user_type"/>
    <result property="payAccountType" jdbcType="TINYINT" column="pay_account_type"/>
    <result property="recUserId" jdbcType="BIGINT" column="rec_user_id"/>
    <result property="recUserType" jdbcType="TINYINT" column="rec_user_type"/>
    <result property="recAccountType" jdbcType="TINYINT" column="rec_account_type"/>
    <result property="merchantId" jdbcType="BIGINT" column="merchant_id"/>
    <result property="transAmount" jdbcType="DECIMAL" column="trans_amount"/>
    <result property="payAmount" jdbcType="DECIMAL" column="pay_amount"/>
    <result property="recAmount" jdbcType="DECIMAL" column="rec_amount"/>
    <result property="feeDirection" jdbcType="TINYINT" column="fee_direction"/>
    <result property="fee" jdbcType="DECIMAL" column="fee"/>
    <result property="platformFee" jdbcType="DECIMAL" column="platform_fee"/>
    <result property="rate" jdbcType="DECIMAL" column="rate"/>
    <result property="batchId" jdbcType="BIGINT" column="batch_id"/>
    <result property="isNeedClear" jdbcType="TINYINT" column="is_need_clear"/>
    <result property="clearState" jdbcType="TINYINT" column="clear_state"/>
    <result property="clearTime" jdbcType="BIGINT" column="clear_time"/>
    <result property="errorMessage" jdbcType="VARCHAR" column="error_message"/>
    <result property="errorCode" jdbcType="VARCHAR" column="error_code"/>
    <result property="transType" jdbcType="TINYINT" column="trans_type"/>
    <result property="remark" jdbcType="VARCHAR" column="remark"/>
    <result property="state" jdbcType="TINYINT" column="state"/>
    <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
    <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
    <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
    <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
    <result property="status" jdbcType="TINYINT" column="status"/>
    <result property="ip" jdbcType="VARCHAR" column="ip"/>
      <result property="accessPartyOrderNo" jdbcType="VARCHAR" column="access_party_order_no"/>
      <result property="accessPartyNotifyUrl" jdbcType="VARCHAR" column="access_party_notify_url"/>
      <result property="accessPartyServerFee" jdbcType="DECIMAL" column="access_party_server_fee"/>
      <result property="accPltFeeClearState" jdbcType="TINYINT" column="acc_plt_fee_clear_state"/>
      <result property="accPltFeeClearBatch" jdbcType="BIGINT" column="acc_plt_fee_clear_batch"/>
      <result property="accessPartyDiscount" jdbcType="DECIMAL" column="access_party_discount"/>
      <result property="creditOrderNo" jdbcType="VARCHAR" column="credit_order_no"/>
      <result property="orderSource" jdbcType="TINYINT" column="order_source"/>
      <result property="baseDiscountAmount" jdbcType="DECIMAL" column="base_discount_amount"/>
      <result property="extraDiscountAmount" jdbcType="DECIMAL" column="extra_discount_amount"/>
      <result property="markingDiscountAmount" jdbcType="DECIMAL" column="marking_discount_amount"/>
      <result property="wholeSalesAmount" jdbcType="DECIMAL" column="whole_sales_amount"/>
      <result property="normalSaleAmount" jdbcType="DECIMAL" column="normal_sale_amount"/>
      <result property="redEnvelopeAmount" jdbcType="DECIMAL" column="red_envelope_amount"/>
      <result property="clearAmount" jdbcType="DECIMAL" column="clear_amount"/>
      <result property="saleType" jdbcType="TINYINT" column="sale_type"/>
      <result property="transNo" jdbcType="VARCHAR" column="trans_no"/>
      <result property="wholeSalesDiscount" jdbcType="DECIMAL" column="whole_sales_discount"/>
      <result property="cardId" jdbcType="VARCHAR" column="card_id"/>
      <result property="productId" jdbcType="VARCHAR" column="product_id"/>
      <result property="payUserIp" jdbcType="VARCHAR" column="pay_user_ip"/>
      <result property="wholeSalesDiscountAmount" jdbcType="DECIMAL" column="whole_sales_discount_amount"/>
      <result property="baseDiscount" jdbcType="DECIMAL" column="base_discount"/>
      <result property="extraDiscount" jdbcType="DECIMAL" column="extra_discount"/>
      <result property="markingDiscount" jdbcType="DECIMAL" column="marking_discount"/>
      <result property="donationAmount" jdbcType="DECIMAL" column="donation_amount"/>
      <result property="tipAmount" jdbcType="DECIMAL" column="tip_amount"/>
      <result property="refundState" jdbcType="TINYINT" column="refund_state"/>
      <result property="refundAmount" jdbcType="DECIMAL" column="refund_amount"/>
      <result property="marketingId" jdbcType="BIGINT" column="marketing_id"/>
      <result property="marketingBalance" jdbcType="DECIMAL" column="marketing_balance"/>
      <result property="marketingManageId" jdbcType="BIGINT" column="marketing_manage_id"/>
  </resultMap>

    <resultMap id="qrPayFlowDTOMap" type="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        <id property="id" jdbcType="BIGINT" column="id"/>
        <result property="gatewayId" jdbcType="BIGINT" column="gateway_id"/>
        <result property="payUserId" jdbcType="BIGINT" column="pay_user_id"/>
        <result property="payUserType" jdbcType="TINYINT" column="pay_user_type"/>
        <result property="payAccountType" jdbcType="TINYINT" column="pay_account_type"/>
        <result property="recUserId" jdbcType="BIGINT" column="rec_user_id"/>
        <result property="recUserType" jdbcType="TINYINT" column="rec_user_type"/>
        <result property="recAccountType" jdbcType="TINYINT" column="rec_account_type"/>
        <result property="merchantId" jdbcType="BIGINT" column="merchant_id"/>
        <result property="transAmount" jdbcType="DECIMAL" column="trans_amount"/>
        <result property="payAmount" jdbcType="DECIMAL" column="pay_amount"/>
        <result property="recAmount" jdbcType="DECIMAL" column="rec_amount"/>
        <result property="feeDirection" jdbcType="TINYINT" column="fee_direction"/>
        <result property="fee" jdbcType="DECIMAL" column="fee"/>
        <result property="platformFee" jdbcType="DECIMAL" column="platform_fee"/>
        <result property="rate" jdbcType="DECIMAL" column="rate"/>
        <result property="batchId" jdbcType="BIGINT" column="batch_id"/>
        <result property="isNeedClear" jdbcType="TINYINT" column="is_need_clear"/>
        <result property="clearState" jdbcType="TINYINT" column="clear_state"/>
        <result property="clearTime" jdbcType="BIGINT" column="clear_time"/>
        <result property="errorMessage" jdbcType="VARCHAR" column="error_message"/>
        <result property="errorCode" jdbcType="VARCHAR" column="error_code"/>
        <result property="transType" jdbcType="TINYINT" column="trans_type"/>
        <result property="remark" jdbcType="VARCHAR" column="remark"/>
        <result property="state" jdbcType="TINYINT" column="state"/>
        <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
        <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
        <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
        <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
        <result property="status" jdbcType="TINYINT" column="status"/>
        <result property="ip" jdbcType="VARCHAR" column="ip"/>
        <result property="transAmountTotal" jdbcType="DECIMAL" column="transAmountTotal"/>
        <result property="recAmountTotal" jdbcType="DECIMAL" column="recAmountTotal"/>
        <result property="count" jdbcType="TINYINT" column="count"/>
        <result property="corporateName" jdbcType="VARCHAR" column="corporate_name"/>
        <result property="bsb" jdbcType="VARCHAR" column="BSB"/>
        <result property="accountNo" jdbcType="VARCHAR" column="account_no"/>
        <result property="bankName" jdbcType="VARCHAR" column="bank_name"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="accessPartyOrderNo" jdbcType="VARCHAR" column="access_party_order_no"/>
        <result property="accessPartyNotifyUrl" jdbcType="VARCHAR" column="access_party_notify_url"/>
        <result property="accessPartyServerFee" jdbcType="DECIMAL" column="access_party_server_fee"/>
        <result property="accPltFeeClearState" jdbcType="TINYINT" column="acc_plt_fee_clear_state"/>
        <result property="accPltFeeClearBatch" jdbcType="BIGINT" column="acc_plt_fee_clear_batch"/>
        <result property="accessPartyDiscount" jdbcType="DECIMAL" column="access_party_discount"/>
        <result property="creditOrderNo" jdbcType="VARCHAR" column="credit_order_no"/>
        <result property="orderSource" jdbcType="TINYINT" column="order_source"/>
        <result property="baseDiscountAmount" jdbcType="DECIMAL" column="base_discount_amount"/>
        <result property="extraDiscountAmount" jdbcType="DECIMAL" column="extra_discount_amount"/>
        <result property="markingDiscountAmount" jdbcType="DECIMAL" column="marking_discount_amount"/>
        <result property="wholeSalesAmount" jdbcType="DECIMAL" column="whole_sales_amount"/>
        <result property="normalSaleAmount" jdbcType="DECIMAL" column="normal_sale_amount"/>
        <result property="redEnvelopeAmount" jdbcType="DECIMAL" column="red_envelope_amount"/>
        <result property="clearAmount" jdbcType="DECIMAL" column="clear_amount"/>
        <result property="saleType" jdbcType="TINYINT" column="sale_type"/>
        <result property="platformId" jdbcType="BIGINT" column="platformId"/>
        <result property="transNo" jdbcType="VARCHAR" column="trans_no"/>
        <result property="wholeSalesDiscount" jdbcType="DECIMAL" column="whole_sales_discount"/>
        <result property="transTime" jdbcType="VARCHAR" column="trans_time"/>
        <result property="cardId" jdbcType="VARCHAR" column="card_id"/>
        <result property="logoUrl" jdbcType="VARCHAR" column="logo_url"/>
        <result property="tradingName" jdbcType="VARCHAR" column="practical_name"/>
        <result property="productId" jdbcType="VARCHAR" column="product_id"/>
        <result property="payUserIp" jdbcType="VARCHAR" column="pay_user_ip"/>
        <result property="tradingName" jdbcType="VARCHAR" column="trading_name"/>
        <result property="logoUrl" jdbcType="VARCHAR" column="logo_url"/>
        <result property="wholeSalesDiscountAmount" jdbcType="DECIMAL" column="whole_sales_discount_amount"/>
        <result property="baseDiscount" jdbcType="DECIMAL" column="base_discount"/>
        <result property="extraDiscount" jdbcType="DECIMAL" column="extra_discount"/>
        <result property="markingDiscount" jdbcType="DECIMAL" column="marking_discount"/>
        <result property="donationAmount" jdbcType="DECIMAL" column="donation_amount"/>
        <result property="tipAmount" jdbcType="DECIMAL" column="tip_amount"/>
        <result property="refundState" jdbcType="TINYINT" column="refund_state"/>
        <result property="refundAmount" jdbcType="DECIMAL" column="refund_amount"/>
        <result property="marketingId" jdbcType="BIGINT" column="marketing_id"/>
        <result property="marketingManageId" jdbcType="BIGINT" column="marketing_manage_id"/>
        <result property="marketingBalance" jdbcType="DECIMAL" column="marketing_balance"/>
    </resultMap>

    <resultMap id="transactionDetailsMap" type="com.uwallet.pay.main.model.dto.AppTransactionDetailsDTO">
        <id property="id" jdbcType="BIGINT" column="id"/>
        <result property="transType" jdbcType="TINYINT" column="trans_type"/>
        <result property="payType" jdbcType="TINYINT" column="payType"/>
        <result property="showType" jdbcType="TINYINT" column="showType"/>
        <result property="transAmount" jdbcType="DECIMAL" column="trans_amount"/>
        <result property="fee" jdbcType="DECIMAL" column="fee"/>
        <result property="rate" jdbcType="DECIMAL" column="rate"/>
        <result property="payAmount" jdbcType="DECIMAL" column="payAmount"/>
        <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
        <result property="logoUrl" jdbcType="VARCHAR" column="logo_url"/>
        <result property="tradingName" jdbcType="VARCHAR" column="practical_name"/>
        <result property="transState" jdbcType="TINYINT" column="trans_state"/>
        <result property="transTypeStr" jdbcType="VARCHAR" column="transTypeStr"/>
        <result property="transStateStr" jdbcType="VARCHAR" column="transStateStr"/>
        <result property="creditOrderNo" jdbcType="VARCHAR" column="credit_order_no"/>
        <result property="monthYear" jdbcType="VARCHAR" column="monthYear"/>
        <result property="monthYearStr" jdbcType="VARCHAR" column="monthYearStr"/>
    </resultMap>

    <insert id="insert" parameterType="com.uwallet.pay.main.model.entity.QrPayFlow">
        INSERT INTO u_qr_pay_flow (
        <if test="id != null">
            `id`
        </if>
        <if test="isShow != null">
            ,`is_show`
        </if>
        <if test="gatewayId != null">
            ,`gateway_id`
        </if>
        <if test="payUserId != null">
            ,`pay_user_id`
        </if>
        <if test="payUserType != null">
            ,`pay_user_type`
        </if>
        <if test="payAccountType != null">
            ,`pay_account_type`
        </if>
        <if test="recUserId != null">
            ,`rec_user_id`
        </if>
        <if test="recUserType != null">
            ,`rec_user_type`
        </if>
        <if test="recAccountType != null">
            ,`rec_account_type`
        </if>
        <if test="merchantId != null">
            ,`merchant_id`
        </if>
        <if test="transAmount != null">
            ,`trans_amount`
        </if>
        <if test="payAmount != null">
            ,`pay_amount`
        </if>
        <if test="recAmount != null">
            ,`rec_amount`
        </if>
        <if test="feeDirection != null">
            ,`fee_direction`
        </if>
        <if test="fee != null">
            ,`fee`
        </if>
        <if test="platformFee != null">
            ,`platform_fee`
        </if>
        <if test="rate != null">
            ,`rate`
        </if>
        <if test="batchId != null">
            ,`batch_id`
        </if>
        <if test="isNeedClear != null">
            ,`is_need_clear`
        </if>
        <if test="clearState != null">
            ,`clear_state`
        </if>
        <if test="clearTime != null">
            ,`clear_time`
        </if>
        <if test="errorMessage != null">
            ,`error_message`
        </if>
        <if test="errorCode != null">
            ,`error_code`
        </if>
        <if test="transType != null">
            ,`trans_type`
        </if>
        <if test="remark != null">
            ,`remark`
        </if>
        <if test="state != null">
            ,`state`
        </if>
        <if test="refundState != null">
            ,`refund_state`
        </if>
        <if test="refundAmount != null">
            ,`refund_amount`
        </if>
        <if test="createdBy != null">
            ,`created_by`
        </if>
        <if test="createdDate != null">
            ,`created_date`
        </if>
        <if test="modifiedBy != null">
            ,`modified_by`
        </if>
        <if test="modifiedDate != null">
            ,`modified_date`
        </if>
        <if test="status != null">
            ,`status`
        </if>
        <if test="ip != null">
            ,`ip`
        </if>
        <if test="accessPartyOrderNo != null">
            ,`access_party_order_no`
        </if>
        <if test="accessPartyNotifyUrl != null">
            ,`access_party_notify_url`
        </if>
        <if test="accessPartyServerFee != null">
            ,`access_party_server_fee`
        </if>
        <if test="accPltFeeClearState != null">
            ,`acc_plt_fee_clear_state`
        </if>
        <if test="accPltFeeClearBatch != null">
            ,`acc_plt_fee_clear_batch`
        </if>
        <if test="accessPartyDiscount != null">
            ,`access_party_discount`
        </if>
        <if test="creditOrderNo != null">
            ,`credit_order_no`
        </if>
        <if test="orderSource != null">
            ,`order_source`
        </if>
        <if test="baseDiscountAmount != null">
            ,`base_discount_amount`
        </if>
        <if test="extraDiscountAmount != null">
            ,`extra_discount_amount`
        </if>
        <if test="markingDiscountAmount != null">
            ,`marking_discount_amount`
        </if>
        <if test="wholeSalesAmount != null">
            ,`whole_sales_amount`
        </if>
        <if test="normalSaleAmount != null">
            ,`normal_sale_amount`
        </if>
        <if test="redEnvelopeAmount != null">
            ,`red_envelope_amount`
        </if>
        <if test="clearAmount != null">
            ,`clear_amount`
        </if>
        <if test="saleType != null">
            ,`sale_type`
        </if>
        <if test="transNo != null">
            ,`trans_no`
        </if>
        <if test="wholeSalesDiscount != null">
            ,`whole_sales_discount`
        </if>
        <if test="cardId != null">
            ,`card_id`
        </if>
        <if test="productId != null">
            ,`product_id`
        </if>
        <if test="payUserIp != null">
            ,`pay_user_ip`
        </if>
        <if test="wholeSalesDiscountAmount != null">
            ,`whole_sales_discount_amount`
        </if>
        <if test="baseDiscount != null">
            ,`base_discount`
        </if>
        <if test="extraDiscount != null">
            ,`extra_discount`
        </if>
        <if test="markingDiscount != null">
            ,`marking_discount`
        </if>
        <if test="donationAmount != null">
            ,`donation_amount`
        </if>
        <if test="tipAmount != null">
            ,`tip_amount`
        </if>
        <if test="marketingManageId != null">
            ,`marketing_manage_id`
        </if>
        <if test="marketingId != null">
            ,`marketing_id`
        </if>
        <if test="marketingBalance != null">
            ,`marketing_balance`
        </if>
        ) VALUES (
        <if test="id != null">
            #{id}
        </if>
        <if test="isShow != null">
            ,#{isShow}
        </if>
        <if test="gatewayId != null">
            ,#{gatewayId}
        </if>
        <if test="payUserId != null">
            ,#{payUserId}
        </if>
        <if test="payUserType != null">
            ,#{payUserType}
        </if>
        <if test="payAccountType != null">
            ,#{payAccountType}
        </if>
        <if test="recUserId != null">
            ,#{recUserId}
        </if>
        <if test="recUserType != null">
            ,#{recUserType}
        </if>
        <if test="recAccountType != null">
            ,#{recAccountType}
        </if>
        <if test="merchantId != null">
            ,#{merchantId}
        </if>
        <if test="transAmount != null">
            ,#{transAmount}
        </if>
        <if test="payAmount != null">
            ,#{payAmount}
        </if>
        <if test="recAmount != null">
            ,#{recAmount}
        </if>
        <if test="feeDirection != null">
            ,#{feeDirection}
        </if>
        <if test="fee != null">
            ,#{fee}
        </if>
        <if test="platformFee != null">
            ,#{platformFee}
        </if>
        <if test="rate != null">
            ,#{rate}
        </if>
        <if test="batchId != null">
            ,#{batchId}
        </if>
        <if test="isNeedClear != null">
            ,#{isNeedClear}
        </if>
        <if test="clearState != null">
            ,#{clearState}
        </if>
        <if test="clearTime != null">
            ,#{clearTime}
        </if>
        <if test="errorMessage != null">
            ,#{errorMessage}
        </if>
        <if test="errorCode != null">
            ,#{errorCode}
        </if>
        <if test="transType != null">
            ,#{transType}
        </if>
        <if test="remark != null">
            ,#{remark}
        </if>
        <if test="state != null">
            ,#{state}
        </if>
        <if test="refundState != null">
            ,#{refundState}
        </if>
        <if test="refundAmount != null">
            ,#{refundAmount}
        </if>
        <if test="createdBy != null">
            ,#{createdBy}
        </if>
        <if test="createdDate != null">
            ,#{createdDate}
        </if>
        <if test="modifiedBy != null">
            ,#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
            ,#{modifiedDate}
        </if>
        <if test="status != null">
            ,#{status}
        </if>
        <if test="ip != null">
            ,#{ip}
        </if>
        <if test="accessPartyOrderNo != null">
            ,#{accessPartyOrderNo}
        </if>
        <if test="accessPartyNotifyUrl != null">
            ,#{accessPartyNotifyUrl}
        </if>
        <if test="accessPartyServerFee != null">
            ,#{accessPartyServerFee}
        </if>
        <if test="accPltFeeClearState != null">
            ,#{accPltFeeClearState}
        </if>
        <if test="accPltFeeClearBatch != null">
            ,#{accPltFeeClearBatch}
        </if>
        <if test="accessPartyDiscount != null">
            ,#{accessPartyDiscount}
        </if>
        <if test="creditOrderNo != null">
            ,#{creditOrderNo}
        </if>
        <if test="orderSource != null">
            ,#{orderSource}
        </if>
        <if test="baseDiscountAmount != null">
            ,#{baseDiscountAmount}
        </if>
        <if test="extraDiscountAmount != null">
            ,#{extraDiscountAmount}
        </if>
        <if test="markingDiscountAmount != null">
            ,#{markingDiscountAmount}
        </if>
        <if test="wholeSalesAmount != null">
            ,#{wholeSalesAmount}
        </if>
        <if test="normalSaleAmount != null">
            ,#{normalSaleAmount}
        </if>
        <if test="redEnvelopeAmount != null">
            ,#{redEnvelopeAmount}
        </if>
        <if test="clearAmount != null">
            ,#{clearAmount}
        </if>
        <if test="saleType != null">
            ,#{saleType}
        </if>
        <if test="transNo != null">
            ,#{transNo}
        </if>
        <if test="wholeSalesDiscount != null">
            ,#{wholeSalesDiscount}
        </if>
        <if test="cardId != null">
            ,#{cardId}
        </if>
        <if test="productId != null">
            ,#{productId}
        </if>
        <if test="payUserIp != null">
            ,#{payUserIp}
        </if>
        <if test="wholeSalesDiscountAmount != null">
            ,#{wholeSalesDiscountAmount}
        </if>
        <if test="baseDiscount != null">
            ,#{baseDiscount}
        </if>
        <if test="extraDiscount != null">
            ,#{extraDiscount}
        </if>
        <if test="markingDiscount != null">
            ,#{markingDiscount}
        </if>
        <if test="donationAmount != null">
            ,#{donationAmount}
        </if>
        <if test="tipAmount != null">
            ,#{tipAmount}
        </if>
        <if test="marketingManageId != null">
            ,#{marketingManageId}
        </if>
        <if test="marketingId != null">
            ,#{marketingId}
        </if>
        <if test="marketingBalance != null">
            ,#{marketingBalance}
        </if>
        )
    </insert>

    <insert id="insertList" parameterType="List">
        INSERT INTO u_qr_pay_flow (
        `id`,
        `is_show`,
        `gateway_id`,
        `pay_user_id`,
        `pay_user_type`,
        `pay_account_type`,
        `rec_user_id`,
        `rec_user_type`,
        `rec_account_type`,
        `merchant_id`,
        `trans_amount`,
        `pay_amount`,
        `rec_amount`,
        `fee_direction`,
        `fee`,
        `platform_fee`,
        `rate`,
        `batch_id`,
        `is_need_clear`,
        `clear_state`,
        `clear_time`,
        `error_message`,
        `error_code`,
        `trans_type`,
        `remark`,
        `state`,
        `refund_state`,
        `refund_amount`,
        `created_by`,
        `created_date`,
        `modified_by`,
        `modified_date`,
        `status`,
        `ip`,
        `access_party_order_no`,
        `access_party_notify_url`,
        `access_party_server_fee`,
        `acc_plt_fee_clear_state`,
        `acc_plt_fee_clear_batch`,
        `access_party_discount`,
        `credit_order_no`,
        `order_source`,
        `base_discount_amount`,
        `extra_discount_amount`,
        `marking_discount_amount`,
        `whole_sales_amount`,
        `normal_sale_amount`,
        `red_envelope_amount`,
        `clear_amount`,
        `sale_type`,
        `trans_no`,
        `whole_sales_discount`,
        `card_id`,
        `product_id`,
        `pay_user_ip`,
        `whole_sales_discount_amount`,
        `base_discount`,
        `extra_discount`,
        `marking_discount`,
        `donation_amount`,
        `tip_amount`,
        `marketing_id`,
        `marketing_balance`
        ) VALUES
        <foreach collection="list" item="data" separator=",">
            (
            #{data.id},
            #{data.isShow},
            #{data.gatewayId},
            #{data.payUserId},
            #{data.payUserType},
            #{data.payAccountType},
            #{data.recUserId},
            #{data.recUserType},
            #{data.recAccountType},
            #{data.merchantId},
            #{data.transAmount},
            #{data.payAmount},
            #{data.recAmount},
            #{data.feeDirection},
            #{data.fee},
            #{data.platformFee},
            #{data.rate},
            #{data.batchId},
            #{data.isNeedClear},
            #{data.clearState},
            #{data.clearTime},
            #{data.errorMessage},
            #{data.errorCode},
            #{data.transType},
            #{data.remark},
            #{data.state},
            #{data.refundState},
            #{data.refundAmount},
            #{data.createdBy},
            #{data.createdDate},
            #{data.modifiedBy},
            #{data.modifiedDate},
            #{data.status},
            #{data.ip},
            #{data.accessPartyOrderNo},
            #{data.accessPartyNotifyUrl},
            #{data.accessPartyServerFee},
            #{data.accPltFeeClearState},
            #{data.accPltFeeClearBatch},
            #{data.accessPartyDiscount},
            #{data.creditOrderNo},
            #{data.orderSource},
            #{data.baseDiscountAmount},
            #{data.extraDiscountAmount},
            #{data.markingDiscountAmount},
            #{data.wholeSalesAmount},
            #{data.normalSaleAmount},
            #{data.redEnvelopeAmount},
            #{data.clearAmount},
            #{data.saleType},
            #{data.transNo},
            #{data.wholeSalesDiscount},
            #{data.cardId},
            #{data.productId},
            #{data.payUserIp},
            #{data.wholeSalesDiscountAmount},
            #{data.baseDiscount},
            #{data.extraDiscount},
            #{data.markingDiscount},
            #{data.donationAmount},
            #{data.tipAmount},
            #{data.marketingId},
            #{data.marketingBalance}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.uwallet.pay.main.model.entity.QrPayFlow">
        UPDATE u_qr_pay_flow
        <set>
            <if test="id != null">
                `id`=#{id},
            </if>
            <if test="isShow != null">
                `is_show`=#{isShow},
            </if>
            <if test="gatewayId != null">
                `gateway_id`=#{gatewayId},
            </if>
            <if test="payUserId != null">
                `pay_user_id`=#{payUserId},
            </if>
            <if test="payUserType != null">
                `pay_user_type`=#{payUserType},
            </if>
            <if test="payAccountType != null">
                `pay_account_type`=#{payAccountType},
            </if>
            <if test="recUserId != null">
                `rec_user_id`=#{recUserId},
            </if>
            <if test="recUserType != null">
                `rec_user_type`=#{recUserType},
            </if>
            <if test="recAccountType != null">
                `rec_account_type`=#{recAccountType},
            </if>
            <if test="merchantId != null">
                `merchant_id`=#{merchantId},
            </if>
            <if test="transAmount != null">
                `trans_amount`=#{transAmount},
            </if>
            <if test="payAmount != null">
                `pay_amount`=#{payAmount},
            </if>
            <if test="recAmount != null">
                `rec_amount`=#{recAmount},
            </if>
            <if test="feeDirection != null">
                `fee_direction`=#{feeDirection},
            </if>
            <if test="fee != null">
                `fee`=#{fee},
            </if>
            <if test="platformFee != null">
                `platform_fee`=#{platformFee},
            </if>
            <if test="rate != null">
                `rate`=#{rate},
            </if>
            <if test="batchId != null">
                `batch_id`=#{batchId},
            </if>
            <if test="isNeedClear != null">
                `is_need_clear`=#{isNeedClear},
            </if>
            <if test="clearState != null">
                `clear_state`=#{clearState},
            </if>
            <if test="clearTime != null">
                `clear_time`=#{clearTime},
            </if>
            <if test="errorMessage != null">
                `error_message`=#{errorMessage},
            </if>
            <if test="errorCode != null">
                `error_code`=#{errorCode},
            </if>
            <if test="transType != null">
                `trans_type`=#{transType},
            </if>
            <if test="remark != null">
                `remark`=#{remark},
            </if>
            <if test="state != null">
                `state`=#{state},
            </if>
            <if test="refundState != null">
                `refund_state`=#{refundState},
            </if>
            <if test="refundAmount != null">
                `refund_amount`=#{refundAmount},
            </if>
            <if test="createdBy != null">
                `created_by`=#{createdBy},
            </if>
            <if test="createdDate != null">
                `created_date`=#{createdDate},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
            <if test="status != null">
                `status`=#{status},
            </if>
            <if test="ip != null">
                `ip`=#{ip},
            </if>
            <if test="accessPartyOrderNo != null">
                `access_party_order_no`=#{accessPartyOrderNo},
            </if>
            <if test="accessPartyNotifyUrl != null">
                `access_party_notify_url`=#{accessPartyNotifyUrl},
            </if>
            <if test="accessPartyServerFee != null">
                `access_party_server_fee`=#{accessPartyServerFee},
            </if>
            <if test="accPltFeeClearState != null">
                `acc_plt_fee_clear_state`=#{accPltFeeClearState},
            </if>
            <if test="accPltFeeClearBatch != null">
                `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch},
            </if>
            <if test="accessPartyDiscount != null">
                `access_party_discount`=#{accessPartyDiscount},
            </if>
            <if test="creditOrderNo != null">
                `credit_order_no`=#{creditOrderNo},
            </if>
            <if test="orderSource != null">
                `order_source`=#{orderSource},
            </if>
            <if test="baseDiscountAmount != null">
                `base_discount_amount`=#{baseDiscountAmount},
            </if>
            <if test="extraDiscountAmount != null">
                `extra_discount_amount`=#{extraDiscountAmount},
            </if>
            <if test="markingDiscountAmount != null">
                `marking_discount_amount`=#{markingDiscountAmount},
            </if>
            <if test="wholeSalesAmount != null">
                `whole_sales_amount`=#{wholeSalesAmount},
            </if>
            <if test="normalSaleAmount != null">
                `normal_sale_amount`=#{normalSaleAmount},
            </if>
            <if test="redEnvelopeAmount != null">
                `red_envelope_amount`=#{redEnvelopeAmount},
            </if>
            <if test="clearAmount != null">
                `clear_amount`=#{clearAmount},
            </if>
            <if test="saleType != null">
                `sale_type`=#{saleType},
            </if>
            <if test="transNo != null">
                `trans_no`=#{transNo},
            </if>
            <if test="wholeSalesDiscount != null">
                `whole_sales_discount`=#{wholeSalesDiscount},
            </if>
            <if test="cardId != null">
                `card_id`=#{cardId},
            </if>
            <if test="productId != null">
                `product_id`=#{productId},
            </if>
            <if test="payUserIp != null">
                `pay_user_ip`=#{payUserIp},
            </if>
            <if test="wholeSalesDiscountAmount != null">
                `whole_sales_discount_amount`=#{wholeSalesDiscountAmount},
            </if>
            <if test="baseDiscount != null">
                `base_discount`=#{baseDiscount},
            </if>
            <if test="extraDiscount != null">
                `extra_discount`=#{extraDiscount},
            </if>
            <if test="markingDiscount != null">
                `marking_discount`=#{markingDiscount},
            </if>
            <if test="donationAmount != null">
                `donation_amount`=#{donationAmount},
            </if>
            <if test="tipAmount != null">
                `tip_amount`=#{tipAmount},
            </if>
            <if test="marketingId != null">
                `marketing_id`=#{marketingId},
            </if>
            <if test="marketingBalance != null">
                `marketing_balance`=#{marketingBalance},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <choose>
                <when test="status != null ">AND status = #{status.value}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            AND id = #{id}
        </trim>
    </update>

    <update id="delete" parameterType="Map">
      UPDATE u_qr_pay_flow
      SET `status`=0,`modified_by`=#{modifiedBy},`modified_date`=#{modifiedDate}
      WHERE id = #{id}
  </update>

    <delete id="pdelete" parameterType="Map">
      DELETE FROM u_qr_pay_flow
      WHERE id = #{id}
  </delete>

    <select id="count" parameterType="Map" resultType="Integer">
        <![CDATA[
            SELECT COUNT(DISTINCT id) FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="stateList != null">
                AND `state` in
                <foreach collection="stateList" item="state" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="isWholeSale != null">
                AND `sale_type` in (1,2)
            </if>
            <if test="notWholeSale != null">
                AND `sale_type` in (0,2)
            </if>
            <if test="queryTransNo != null">
                AND `trans_no` like concat('%',#{queryTransNo},'%')
            </if>
            <choose>
                <when test="status != null">And status = #{status}</when>
                <otherwise><![CDATA[And status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
            <if test="clearStart != null and clearEnd != null">
                AND `clear_time` BETWEEN #{clearStart} AND #{ clearEnd}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
        </trim>
    </select>

    <select id="selectOne" parameterType="Map" resultMap="qrPayFlowMap">
        <![CDATA[
            SELECT * FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
        LIMIT 1
    </select>

    <select id="selectOneDTO" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT * FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <if test="stateList != null">
                AND `state` in
                <foreach collection="stateList" item="state" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
        LIMIT 1
    </select>

    <select id="select" parameterType="Map" resultMap="qrPayFlowMap">
        <![CDATA[
            SELECT * FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                ${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <select id="selectDTO" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT * FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="isWholeSale != null ">
                AND `sale_type` in (1,2)
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
            <if test="stateList != null">
                AND `state` in
                <foreach collection="stateList" item="state" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="clearStart != null and clearEnd != null">
                AND `clear_time` BETWEEN #{clearStart} AND #{ clearEnd}
            </if>
            <if test="queryTransNo != null">
                AND `trans_no` like concat('%',#{queryTransNo},'%')
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
        </trim>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                ${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>

    </select>

    <select id="selectMap" parameterType="Map" resultType="Map">
        SELECT
        <foreach collection="columns" item="cname" separator="," open="`" close="`">
            ${cname}
        </foreach>
        FROM u_qr_pay_flow
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
        </trim>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                ${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <!--统计相关查询-->
    <select id="groupCount" parameterType="Map" resultType="Map">
        <![CDATA[
            SELECT ${group} AS `group`, COUNT(DISTINCT id) AS `count` FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
        </trim>
        GROUP BY `group`
        ORDER BY `group` ASC
    </select>

    <select id="sum" parameterType="Map" resultType="Double">
        <![CDATA[
            SELECT IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
    </select>

    <select id="groupSum" parameterType="Map" resultType="Map">
        <![CDATA[
            SELECT ${group} AS `group`, IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <if test="accessPartyOrderNo != null">
                AND `access_party_order_no`=#{accessPartyOrderNo}
            </if>
            <if test="accessPartyNotifyUrl != null">
                AND `access_party_notify_url`=#{accessPartyNotifyUrl}
            </if>
            <if test="accessPartyServerFee != null">
                AND `access_party_server_fee`=#{accessPartyServerFee}
            </if>
            <if test="accPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{accPltFeeClearState}
            </if>
            <if test="accPltFeeClearBatch != null">
                AND `acc_plt_fee_clear_batch`=#{accPltFeeClearBatch}
            </if>
            <if test="accessPartyDiscount != null">
                AND `access_party_discount`=#{accessPartyDiscount}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="wholeSalesDiscount != null">
                AND `whole_sales_discount`=#{wholeSalesDiscount}
            </if>
            <if test="cardId != null">
                AND `card_id`=#{cardId}
            </if>
            <if test="wholeSalesDiscountAmount != null">
                AND `whole_sales_discount_amount`=#{wholeSalesDiscountAmount}
            </if>
            <if test="baseDiscount  != null">
                AND `base_discount`=#{baseDiscount}
            </if>
            <if test="extraDiscount   != null">
                AND `extra_discount`=#{extraDiscount}
            </if>
            <if test="markingDiscount   != null">
                AND `marking_discount`=#{markingDiscount}
            </if>
            <if test="donationAmount != null">
                AND `donation_amount`=#{donationAmount}
            </if>
            <if test="tipAmount != null">
                AND `tip_amount`=#{tipAmount}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <if test="marketingId != null">
                AND `marketing_id`=#{marketingId}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
        GROUP BY `group`
        ORDER BY `group` ASC
    </select>
    <select id="countQrPayFlowList" parameterType="Map" resultType="Integer">
        <![CDATA[
            SELECT COUNT(DISTINCT b.user_id)
            FROM u_qr_pay_flow a
            LEFT JOIN u_merchant b
            ON a.rec_user_id=b.user_id and b.`status` >0
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND a.`id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND a.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND a.`pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND a.`pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND a.`pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND a.`rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND a.`rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND a.`rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND a.`trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND a.`pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND a.`rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND a.`fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND a.`fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND a.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND a.`clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND a.`clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND a.`error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND a.`error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND a.`trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND a.`remark`=#{remark}
            </if>
            <if test="state != null">
                AND a.`state`=#{state}
            </if>
            <if test="createdBy != null">
                AND a.`created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND a.`created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND a.`modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND a.`modified_date`=#{modifiedDate}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="refundState != null">
                AND `refund_state`=#{refundState}
            </if>
            <if test="refundAmount != null">
                AND `refund_amount`=#{refundAmount}
            </if>
            <choose>
                <when test="status != null">And a.status = #{status}</when>
                <otherwise><![CDATA[And a.status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND a.`ip`=#{ip}
            </if>
        </trim>
    </select>
    <select id="qrPayFlowList" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT SUM(trans_amount) as transAmountTotal,SUM(rec_amount) as recAmountTotal,count(a.id) as count,
            a.rec_user_id,b.corporate_name,b.BSB,b.account_no,b.bank_name
            FROM u_qr_pay_flow a
            LEFT JOIN u_merchant b
            ON a.rec_user_id=b.user_id and b.`status` >0
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND a.`id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND a.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND a.`pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND a.`pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND a.`pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND a.`rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND a.`rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND a.`rec_account_type`=#{recAccountType}
            </if>
            <if test="transAmount != null">
                AND a.`trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND a.`pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND a.`rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND a.`fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND a.`fee`=#{fee}
            </if>
            <if test="isNeedClear != null">
                AND a.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND a.`clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND a.`clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND a.`error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND a.`error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND a.`trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND a.`remark`=#{remark}
            </if>
            <if test="state != null">
                AND a.`state`=#{state}
            </if>
            <if test="createdBy != null">
                AND a.`created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND a.`created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND a.`modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND a.`modified_date`=#{modifiedDate}
            </if>
            <choose>
                <when test="status != null">AND a.status = #{status}</when>
                <otherwise><![CDATA[AND a.status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND a.`ip`=#{ip}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
        </trim>
        GROUP BY b.user_id
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                a.${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

  <select id="selectPayBorrow" parameterType="java.util.Map" resultType="com.uwallet.pay.main.model.dto.PayBorrowDTO">
      SELECT
            flow.id,
            pay_user.phone,
            merchant.corporate_name,
            flow.trans_amount,
            flow.pay_amount truely_pay_amount,
            (flow.rate * 100) rate,
            gateway.type as gateway_id,
            gateway.channel_name,
            flow.state,
            flow.clear_state,
            flow.created_date,
            refund.refund_amount
      FROM u_qr_pay_flow flow
      LEFT JOIN u_user pay_user ON pay_user.id = flow.pay_user_id
      LEFT JOIN u_merchant merchant ON merchant.user_id = flow.rec_user_id
      LEFT JOIN u_gateway gateway ON gateway.type = flow.gateway_id
      LEFT JOIN (
        SELECT flow_id, SUM(refund_amount) refund_amount FROM u_refund_flow WHERE state = 1 AND status = 1 GROUP BY flow_id
      ) refund ON refund.flow_id = flow.id
      WHERE flow.`status` > 0
      <if test="searchName != null">
          AND (flow.id=#{searchName} OR pay_user.phone LIKE CONCAT('%', #{searchName}, '%'))
      </if>
      <if test="date != null">
          AND FROM_UNIXTIME(flow.created_date/1000,'%Y-%m') = #{date}
      </if>
      <if test="id != null">
          AND flow.id=#{id}
      </if>
      <if test="merchantId != null">
          AND flow.merchant_id=#{merchantId}
      </if>
      <if test="phone != null">
          AND pay_user.phone = LOWER(#{phone})
      </if>
      <if test="corporateName != null">
          AND merchant.corporate_name LIKE CONCAT('%', #{corporateName}, '%')
      </if>
      <if test="gatewayId != null">
          AND flow.gateway_id = #{gatewayId}
      </if>
      <if test="state != null">
          AND flow.state = #{state}
      </if>
      <if test="clearState != null">
          AND flow.clear_state = #{clearState}
      </if>
      <if test="start != null and end != null">
          AND flow.created_date BETWEEN #{start} AND #{ end}
      </if>
      <if test="scs != null and scs.size() > 0">
          ORDER BY
          <foreach collection="scs" item="sc" separator=",">
              ${sc.field} ${sc.order}
          </foreach>
      </if>
      <if test="pc != null">
          LIMIT ${pc.startIndex}, ${pc.pageSize}
      </if>
  </select>

  <select id="selectPayBorrowCount" parameterType="java.util.Map" resultType="int">
      SELECT
            COUNT(DISTINCT flow.id)
      FROM u_qr_pay_flow flow
      LEFT JOIN u_user pay_user ON pay_user.id = flow.pay_user_id
      LEFT JOIN u_merchant merchant ON merchant.user_id = flow.rec_user_id
      WHERE flow.`status` > 0
      <if test="searchName != null">
          AND (flow.id=#{searchName} OR pay_user.phone LIKE CONCAT('%', #{searchName}, '%'))
      </if>
      <if test="date != null">
          AND FROM_UNIXTIME(flow.created_date/1000,'%Y-%m') = #{date}
      </if>
      <if test="id != null">
          AND flow.id=#{id}
      </if>
      <if test="merchantId != null">
          AND flow.merchant_id=#{merchantId}
      </if>
      <if test="email != null">
          AND pay_user.phone = LOWER(#{phone})
      </if>
      <if test="corporateName != null">
          AND merchant.corporate_name LIKE CONCAT('%', #{corporateName}, '%')
      </if>
      <if test="gatewayId != null">
          AND flow.gateway_id = #{gatewayId}
      </if>
      <if test="state != null">
          AND flow.state = #{state}
      </if>
      <if test="clearState != null">
          AND flow.clear_state = #{clearState}
      </if>
      <if test="start != null and end != null">
          AND flow.created_date BETWEEN #{start} AND #{ end}
      </if>
  </select>

  <select id="selectTransferBorrow" parameterType="java.util.Map" resultType="com.uwallet.pay.main.model.dto.TransferBorrowDTO">
      SELECT
            flow.id,
            pay_user.email pay_no,
            rec_user.email rec_no,
            flow.trans_amount,
            flow.pay_amount truely_pay_amount,
            (flow.rate * 100) rate,
            flow.gateway_id,
            gateway.channel_name,
            flow.state,
            flow.created_date
      FROM u_qr_pay_flow flow
      LEFT JOIN u_user pay_user ON pay_user.id = flow.pay_user_id
      LEFT JOIN u_user rec_user ON rec_user.id = flow.rec_user_id
      LEFT JOIN u_gateway gateway ON gateway.type = flow.gateway_id
      WHERE flow.`status` > 0 AND flow.trans_type IN (3,4,10,11)
      <if test="id != null">
          AND flow.id=#{id}
      </if>
      <if test="payNo != null">
          AND pay_user.email = LOWER(#{payNo})
      </if>
      <if test="recNo != null">
          AND rec_user.email = LOWER(#{recNo})
      </if>
      <if test="gatewayId != null">
          AND flow.gateway_id = #{gatewayId}
      </if>
      <if test="state != null">
          AND flow.state = #{state}
      </if>
      <if test="start != null and end != null">
          AND flow.created_date BETWEEN #{start} AND #{ end}
      </if>
      <if test="scs != null and scs.size() > 0">
          ORDER BY
          <foreach collection="scs" item="sc" separator=",">
              ${sc.field} ${sc.order}
          </foreach>
      </if>
      <if test="pc != null">
          LIMIT ${pc.startIndex}, ${pc.pageSize}
      </if>
  </select>

  <select id="selectTransferBorrowCount" parameterType="java.util.Map" resultType="int">
      SELECT
            COUNT(DISTINCT flow.id)
      FROM u_qr_pay_flow flow
      LEFT JOIN u_user pay_user ON pay_user.id = flow.pay_user_id
      LEFT JOIN u_user rec_user ON rec_user.id = flow.rec_user_id
      WHERE flow.`status` > 0 AND flow.trans_type IN (3,4,10,11)
      <if test="id != null">
          AND flow.id=#{id}
      </if>
      <if test="payNo != null">
          AND pay_user.email = LOWER(#{payNo})
      </if>
      <if test="recNo != null">
          AND rec_user.email = LOWER(#{recNo})
      </if>
      <if test="gatewayId != null">
          AND flow.gateway_id = #{gatewayId}
      </if>
      <if test="state != null">
          AND flow.state = #{state}
      </if>
      <if test="start != null and end != null">
          AND flow.created_date BETWEEN #{start} AND #{ end}
      </if>
  </select>

  <select id="selectBatchBorrow" parameterType="java.util.Map" resultType="com.uwallet.pay.main.model.dto.PayBorrowDTO">
      SELECT
          flow.id,
          pay_user.email,
          merchant.corporate_name,
          flow.trans_amount,
          (flow.trans_amount + flow.fee) truely_pay_amount,
          flow.rate,
          gateway.channel_name,
          flow.state,
          flow.clear_state,
          flow.created_date
      FROM u_qr_pay_flow flow
      LEFT JOIN u_user pay_user ON pay_user.id = flow.pay_user_id
      LEFT JOIN u_merchant merchant ON merchant.user_id = flow.rec_user_id
      LEFT JOIN u_gateway gateway ON gateway.id = flow.gateway_id
      WHERE flow.`status` > 0 AND flow.batch_id = #{batchId}
      <if test="scs != null and scs.size() > 0">
          ORDER BY
          <foreach collection="scs" item="sc" separator=",">
              ${sc.field} ${sc.order}
          </foreach>
      </if>
      <if test="pc != null">
          LIMIT ${pc.startIndex}, ${pc.pageSize}
      </if>
  </select>

  <select id="selectBatchBorrowCount"  parameterType="java.util.Map" resultType="int">
      SELECT
            COUNT(DISTINCT flow.id)
      FROM u_qr_pay_flow flow
      LEFT JOIN u_user pay_user ON pay_user.id = flow.pay_user_id
      LEFT JOIN u_merchant merchant ON merchant.user_id = flow.rec_user_id
      LEFT JOIN u_gateway gateway ON gateway.id = flow.gateway_id
      WHERE flow.`status` > 0 AND flow.batch_id = #{batchId}
  </select>

    <select id="qrPayFlowListDetails" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT a.id,a.trans_amount,a.pay_amount,a.created_date,b.corporate_name,c.phone, a.trans_type as trans_type
			FROM u_qr_pay_flow a
            LEFT JOIN u_withhold_flow w ON a.id = w.flow_id
            LEFT JOIN u_merchant b
            ON a.rec_user_id=b.user_id and b.`status` >0
            LEFT JOIN u_user c
            ON a.pay_user_id=c.id and c.`status` >0
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND a.`state`='31' and a.status > 0
            AND a.`clear_state` = 0
            AND a.`is_need_clear`=1
            AND w.check_state IN (1, 2)
            <if test="userId != null">
                AND b.`user_id`=#{userId}
            </if>
            <if test="gatewayId != null">
                AND a.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND a.`pay_user_id`=#{payUserId}
            </if>
            <if test="recUserId != null">
                AND a.`rec_user_id`=#{recUserId}
            </if>
            <if test="clearState != null">
                AND a.`clear_state`=#{clearState}
            </if>
        <if test="transType != null">
            AND a.`trans_type`=#{transType}
        </if>
        <if test="start != null and end != null">
            AND a.`created_date` BETWEEN #{start} AND #{ end}
        </if>
    </trim>
    union all
        SELECT
        r.flow_id as id,
        r.refund_amount as trans_amount,
        r.refund_amount-r.not_settlement_amount as pay_amount,
        r.created_date as created_date,
        mer.corporate_name as corporate_name,
        puser.phone,
        r.trans_type as trans_type
        FROM
        u_refund_flow r
        LEFT JOIN u_qr_pay_flow qr ON qr.id = r.flow_id
        LEFT JOIN u_user puser ON qr.pay_user_id = puser.id
        LEFT JOIN u_merchant mer ON mer.user_id = r.org_rec_user_id
        WHERE
        r. STATUS > 0
        AND  (r.state = 2 AND r.settlement_state=3 )
        AND r.gateway_id = #{gatewayId}
        AND r.org_rec_user_id =#{userId}
        <if test="start != null and end != null">
            AND r.`created_date` BETWEEN #{start} AND #{ end}
        </if>
    </select>

    <select id="appQrPayFlowListRecAmountTotal" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT qr.id,qr.rec_amount,qr.clear_time,g.gateway_type as gateway_id FROM u_qr_pay_flow qr left join u_gateway g on g.type = qr.gateway_id
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND qr.`id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND qr.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND qr.`pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND qr.`pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND qr.`pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND qr.`rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND qr.`rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND qr.`rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND qr.`merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND qr.`trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND qr.`pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND qr.`rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND qr.`fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND qr.`fee`=#{fee}
            </if>
            <if test="isNeedClear != null">
                AND qr.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND qr.`clear_state`=#{clearState}
            </if>
            <if test="transType != null">
                AND qr.`trans_type`=#{transType}
            </if>
            <if test="state != null">
                AND qr.`state`=#{state}
            </if>
            <if test="start != null and end != null">
                AND qr.`clear_time` BETWEEN #{start} AND #{ end}
            </if>
            <choose>
                <when test="status != null">AND qr.status = #{status}</when>
                <otherwise><![CDATA[AND qr.status > 0]]></otherwise>
            </choose>
        </trim>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                ${sc.field} ${sc.order}
            </foreach>
        </if>
    </select>

    <select id="recAmountTotal" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT sum(rec_amount) as recAmountTotal FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `clear_time` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND `modified_date`=#{modifiedDate}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
        LIMIT 1
    </select>

    <select id="appQrPayFlowUnRecAmountTotal" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT sum(rec_amount) as recAmountTotal FROM u_qr_pay_flow
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND `id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND `gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND `trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND `pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND `rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND `fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND `fee`=#{fee}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND `clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND `error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND `error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND `remark`=#{remark}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="createdBy != null">
                AND `created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND `modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND a.`modified_date`=#{modifiedDate}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND `ip`=#{ip}
            </if>
        </trim>
        LIMIT 1
    </select>

    <select id="findAccountDoubleFlow"  resultMap="qrPayFlowDTOMap">
        select * from u_qr_pay_flow qf WHERE qf.state in ('30','33')
        <![CDATA[AND qf.created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        AND status > 0 ]]>
    </select>

    <select id="findAccountFailFlow"  resultMap="qrPayFlowDTOMap">
        select * from u_qr_pay_flow qf WHERE qf.state ='32'
        <![CDATA[AND qf.created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        AND status > 0 ]]>
    </select>

    <select id="findThirdDoubtFlow"  resultMap="qrPayFlowDTOMap">
        select * from u_qr_pay_flow qf WHERE qf.trans_type = '2' and qf.state in ('20','23')
        <![CDATA[AND qf.created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        AND status > 0 ]]> order by qf.created_date desc limit 1000

    </select>
    <select id="transactionDetails" parameterType="Map" resultMap="transactionDetailsMap">
        select * from (
        select  g.gateway_type as  payType,re.trans_amount,re.created_date,re.fee,
        re.charge as rate,re.trans_amount+re.fee as payAmount,'0' as showType
        from u_recharge_flow re
        left join u_gateway g on g.type=re.gateway_id
        where re.user_id =#{userId} and re.state in (21,31)
        <if test="start != null and end != null">
            AND re.`created_date` BETWEEN #{start} AND #{ end}
        </if>
        UNION ALL
        select g.gateway_type as  payType,q.trans_amount,q.created_date,q.fee,
        (case when fee_direction = 0 then 0 else q.rate  end)  as rate ,q.pay_amount,'1' as showType
        from u_qr_pay_flow q
        left join u_gateway g on g.type=q.gateway_id
        where q.pay_user_id=#{userId} and
        q.state in (21,31)
        <if test="start != null and end != null">
            AND q.`created_date` BETWEEN #{start} AND #{ end}
        </if>
        UNION ALL
        select  g.gateway_type as  payType,q.trans_amount,q.created_date,q.fee,q.rate,q.pay_amount,'2' as showType
        from u_qr_pay_flow q
        left join u_gateway g on g.type=q.gateway_id
        where q.rec_user_id=#{userId} and
        q.state in (21,31)
        <if test="start != null and end != null">
            AND q.`created_date` BETWEEN #{start} AND #{ end}
        </if>)kk order by kk.created_date desc
    </select>

    <update id="updateClearBatch" parameterType="Map" >
        UPDATE u_qr_pay_flow
        <set>
            <if test="batchId != null">
                `batch_id`=#{batchId},
            </if>
            <if test="clearState != null">
                `clear_state`=#{clearState},
            </if>
            <if test="clearTime != null">
                `clear_time`=#{clearTime},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <![CDATA[And status > 0]]>
            <if test="isNeedClear != null">
                AND  `is_need_clear`=#{isNeedClear}
            </if>
            <if test="orgClearState != null">
                AND  `clear_state`=#{orgClearState}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="recUserId != null">
                AND  `rec_user_id`=#{recUserId}
            </if>
            <if test="orgBatchId != null">
                AND  `batch_id`=#{orgBatchId}
            </if>
            <if test="merchantId != null">
                AND  `merchant_id`=#{merchantId}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
        </trim>
    </update>

    <select id="clearTotal" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT sum(rec_amount) as recAmountTotal,count(a.id) as count,sum(trans_amount) as transAmountTotal FROM u_qr_pay_flow a
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND a.`id`=#{id}
            </if>
            <if test="batchId != null">
                AND `batch_id`=#{batchId}
            </if>
            <if test="gatewayId != null">
                AND a.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND a.`pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND a.`pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND a.`pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND a.`rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND a.`rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND a.`rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND a.`merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND a.`trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND a.`pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND a.`rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND a.`fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND a.`fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND `platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND a.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND a.`clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND a.`clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND a.`error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND a.`error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND a.`trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND a.`remark`=#{remark}
            </if>
            <if test="state != null">
                AND a.`state`=#{state}
            </if>
            <if test="createdBy != null">
                AND a.`created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND a.`created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedBy != null">
                AND a.`modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND a.`modified_date`=#{modifiedDate}
            </if>
            <choose>
                <when test="status != null">AND a.status = #{status}</when>
                <otherwise><![CDATA[AND a.status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND a.`ip`=#{ip}
            </if>
        </trim>
    </select>
    <select id="countList" parameterType="Map" resultType="Integer">
    <![CDATA[
            SELECT COUNT(DISTINCT id) FROM u_qr_pay_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="id != null">
            AND `id`=#{id}
        </if>
        <if test="gatewayId != null">
            AND `gateway_id`=#{gatewayId}
        </if>
        <if test="payUserId != null">
            AND `pay_user_id`=#{payUserId}
        </if>
        <if test="payUserType != null">
            AND `pay_user_type`=#{payUserType}
        </if>
        <if test="payAccountType != null">
            AND `pay_account_type`=#{payAccountType}
        </if>
        <if test="recUserId != null">
            AND `rec_user_id`=#{recUserId}
        </if>
        <if test="recUserType != null">
            AND `rec_user_type`=#{recUserType}
        </if>
        <if test="recAccountType != null">
            AND `rec_account_type`=#{recAccountType}
        </if>
        <if test="merchantId != null">
            AND `merchant_id`=#{merchantId}
        </if>
        <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
        </if>
        <if test="payAmount != null">
            AND `pay_amount`=#{payAmount}
        </if>
        <if test="recAmount != null">
            AND `rec_amount`=#{recAmount}
        </if>
        <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
        </if>
        <if test="fee != null">
            AND `fee`=#{fee}
        </if>
        <if test="platformFee != null">
            AND `platform_fee`=#{platformFee}
        </if>
        <if test="isNeedClear != null">
            AND `is_need_clear`=#{isNeedClear}
        </if>
        <if test="clearState != null">
            AND `clear_state`=#{clearState}
        </if>
        <if test="errorMessage != null">
            AND `error_message`=#{errorMessage}
        </if>
        <if test="errorCode != null">
            AND `error_code`=#{errorCode}
        </if>
        <if test="transType != null">
            AND `trans_type`=#{transType}
        </if>
        <if test="remark != null">
            AND `remark`=#{remark}
        </if>
        <if test="state != null">
            AND `state`=#{state}
        </if>
        <if test="createdBy != null">
            AND `created_by`=#{createdBy}
        </if>
        <if test="start != null and end != null">
            AND `clear_time` BETWEEN #{start} AND #{ end}
        </if>
        <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
        </if>
        <choose>
            <when test="status != null">And status = #{status}</when>
            <otherwise><![CDATA[And status > 0]]></otherwise>
        </choose>
        <if test="ip != null">
            AND `ip`=#{ip}
        </if>
    </trim>
</select>

    <select id="countLists" parameterType="Map" resultType="Integer">
        <![CDATA[
            SELECT COUNT(DISTINCT a.id) FROM u_qr_pay_flow a
            LEFT JOIN u_user b
            ON a.pay_user_id=b.id and b.`status` >0 AND a.trans_type IN (1,2,8,9)
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND a.`id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND a.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND a.`pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND a.`pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND a.`pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND a.`rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND a.`rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND a.`rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND a.`merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND a.`trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND a.`pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND a.`rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND a.`fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND a.`fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND a.`platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND a.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND a.`clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND a.`clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND a.`error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND a.`error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND a.`trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND a.`remark`=#{remark}
            </if>
            <if test="state != null">
                AND a.`state`=#{state}
            </if>
            <if test="createdBy != null">
                AND a.`created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND a.`created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="queryDate != null">
                AND FROM_UNIXTIME(a.`created_date`/1000,'%Y-%m') = #{queryDate}
            </if>
            <if test="modifiedBy != null">
                AND a.`modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND a.`modified_date`=#{modifiedDate}
            </if>
            <choose>
                <when test="status != null">And a.status = #{status}</when>
                <otherwise><![CDATA[And a.status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND a.`ip`=#{ip}
            </if>
        </trim>
    </select>
    <select id="appQrPayFlowList" parameterType="Map" resultMap="qrPayFlowDTOMap">
        <![CDATA[
            SELECT a.id,b.phone,a.trans_amount,a.pay_amount,a.rec_amount,a.created_date,a.trans_type FROM u_qr_pay_flow a
            LEFT JOIN u_user b
            ON a.pay_user_id=b.id and b.`status` >0 AND a.trans_type IN (1,2,8,9)
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND a.`id`=#{id}
            </if>
            <if test="gatewayId != null">
                AND a.`gateway_id`=#{gatewayId}
            </if>
            <if test="payUserId != null">
                AND a.`pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND a.`pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND a.`pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND a.`rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND a.`rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND a.`rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND a.`merchant_id`=#{merchantId}
            </if>
            <if test="transAmount != null">
                AND a.`trans_amount`=#{transAmount}
            </if>
            <if test="payAmount != null">
                AND a.`pay_amount`=#{payAmount}
            </if>
            <if test="recAmount != null">
                AND a.`rec_amount`=#{recAmount}
            </if>
            <if test="feeDirection != null">
                AND a.`fee_direction`=#{feeDirection}
            </if>
            <if test="fee != null">
                AND a.`fee`=#{fee}
            </if>
            <if test="platformFee != null">
                AND a.`platform_fee`=#{platformFee}
            </if>
            <if test="isNeedClear != null">
                AND a.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND a.`clear_state`=#{clearState}
            </if>
            <if test="clearTime != null">
                AND a.`clear_time`=#{clearTime}
            </if>
            <if test="errorMessage != null">
                AND a.`error_message`=#{errorMessage}
            </if>
            <if test="errorCode != null">
                AND a.`error_code`=#{errorCode}
            </if>
            <if test="transType != null">
                AND a.`trans_type`=#{transType}
            </if>
            <if test="remark != null">
                AND a.`remark`=#{remark}
            </if>
            <if test="state != null">
                AND a.`state`=#{state}
            </if>
            <if test="createdBy != null">
                AND a.`created_by`=#{createdBy}
            </if>
            <if test="start != null and end != null">
                AND a.`created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="queryDate != null">
                AND FROM_UNIXTIME(a.`created_date`/1000,'%Y-%m') = #{queryDate}
            </if>
            <if test="modifiedBy != null">
                AND a.`modified_by`=#{modifiedBy}
            </if>
            <if test="modifiedDate != null">
                AND a.`modified_date`=#{modifiedDate}
            </if>
            <choose>
                <when test="status != null">AND a.status = #{status}</when>
                <otherwise><![CDATA[AND a.status > 0]]></otherwise>
            </choose>
            <if test="ip != null">
                AND a.`ip`=#{ip}
            </if>
        </trim>
        order by a.created_date desc
        <if test="pc != null">
        LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <update id="updateForConcurrency" parameterType="com.uwallet.pay.main.model.entity.QrPayFlow">
        UPDATE u_qr_pay_flow
        <set>
            <if test="id != null">
                `id`=#{id},
            </if>
            <if test="gatewayId != null">
                `gateway_id`=#{gatewayId},
            </if>
            <if test="payUserId != null">
                `pay_user_id`=#{payUserId},
            </if>
            <if test="payUserType != null">
                `pay_user_type`=#{payUserType},
            </if>
            <if test="payAccountType != null">
                `pay_account_type`=#{payAccountType},
            </if>
            <if test="recUserId != null">
                `rec_user_id`=#{recUserId},
            </if>
            <if test="recUserType != null">
                `rec_user_type`=#{recUserType},
            </if>
            <if test="recAccountType != null">
                `rec_account_type`=#{recAccountType},
            </if>
            <if test="merchantId != null">
                `merchant_id`=#{merchantId},
            </if>
            <if test="transAmount != null">
                `trans_amount`=#{transAmount},
            </if>
            <if test="payAmount != null">
                `pay_amount`=#{payAmount},
            </if>
            <if test="recAmount != null">
                `rec_amount`=#{recAmount},
            </if>
            <if test="feeDirection != null">
                `fee_direction`=#{feeDirection},
            </if>
            <if test="fee != null">
                `fee`=#{fee},
            </if>
            <if test="platformFee != null">
                `platform_fee`=#{platformFee},
            </if>
            <if test="isNeedClear != null">
                `is_need_clear`=#{isNeedClear},
            </if>
            <if test="clearState != null">
                `clear_state`=#{clearState},
            </if>
            <if test="clearTime != null">
                `clear_time`=#{clearTime},
            </if>
            <if test="errorMessage != null">
                `error_message`=#{errorMessage},
            </if>
            <if test="errorCode != null">
                `error_code`=#{errorCode},
            </if>
            <if test="transType != null">
                `trans_type`=#{transType},
            </if>
            <if test="remark != null">
                `remark`=#{remark},
            </if>
            <if test="state != null">
                `state`=#{state},
            </if>
            <if test="createdBy != null">
                `created_by`=#{createdBy},
            </if>
            <if test="createdDate != null">
                `created_date`=#{createdDate},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
            <if test="status != null">
                `status`=#{status},
            </if>
            <if test="ip != null">
                `ip`=#{ip},
            </if>
            <if test="accessPartyServerFee != null">
                `access_party_server_fee`=#{accessPartyServerFee},
            </if>
            <if test="accessPartyDiscount != null">
                `access_party_discount`=#{accessPartyDiscount},
            </if>
            <if test="creditOrderNo != null">
                `credit_order_no`=#{creditOrderNo},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <choose>
                <when test="status != null ">AND status = #{status.value}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            AND id = #{id} AND  state != #{state}
        </trim>
    </update>

    <select id="selectOrderRefund" resultType="java.math.BigDecimal">
        SELECT SUM(refund_amount) FROM u_refund_flow WHERE flow_id = #{id} AND state = 1
    </select>

    <select id="selectUnClearByGateway" resultType="java.math.BigDecimal">
        select
        (SELECT (case when SUM( rec_amount ) is null then 0 else SUM( rec_amount ) end)  as amt FROM u_qr_pay_flow WHERE `status` > 0 AND clear_state = 0
        AND gateway_id = #{gatewayId} AND rec_user_id =#{userId} AND state = 31)
        -
        (select (case when sum(not_settlement_amount)  is null then 0 else sum(not_settlement_amount)  end) amt from u_refund_flow r where `status` > 0 and state &lt;&gt; 2
        and settlement_state in (0,6)  and gateway_id =  #{gatewayId} and  org_rec_user_id = #{userId})
        +
        (select (case when sum(refund_amount) is null then 0 else sum(refund_amount) end) -
        (case when sum(not_settlement_amount) is null then 0 else sum(not_settlement_amount) end)
        from u_refund_flow r where `status` > 0 and state = 2
        and settlement_state =3  and gateway_id =  #{gatewayId}  and org_rec_user_id = #{userId}) from dual

    </select>

    <update id="addQrPayClearBatchId" parameterType="Map" >
        UPDATE u_qr_pay_flow
        <set>
            <if test="batchId != null">
                `batch_id`=#{batchId},
            </if>
            <if test="clearState != null">
                `clear_state`=#{clearState},
            </if>
            <if test="clearTime != null">
                `clear_time`=#{clearTime},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <![CDATA[And status > 0]]>
            AND id in (
            select pp.id from (
            select p.id from u_qr_pay_flow p left join u_withhold_flow w on p.id =w.flow_id
            <trim prefix="WHERE" prefixOverrides="AND|OR">
                <if test="gatewayId != null">
                    AND p.`gateway_id`=#{gatewayId}
                </if>
                <if test="isNeedClear != null">
                    AND p.`is_need_clear`=#{isNeedClear}
                </if>
                <if test="orgClearState != null">
                    AND p.`clear_state`=#{orgClearState}
                </if>
                <if test="start != null and end != null">
                    AND p.`created_date` BETWEEN #{start} AND #{ end}
                </if>
                <if test="orgBatchId != null">
                    AND p.`batch_id`=#{orgBatchId}
                </if>
                <if test="state != null">
                    AND p.`state`=#{state}
                </if>
                <if test="state != null">
                    AND w.`check_state` in ('1','2')
                </if>
            </trim>)pp)
        </trim>
    </update>

    <select id="countMerchantClearList" parameterType="Map" resultType="Integer">
SELECT
	count(*)
FROM
    (select * from
		(
			SELECT
				p.rec_amount AS amt,
				p.rec_user_id AS userId
			FROM
				u_qr_pay_flow p
			LEFT JOIN u_withhold_flow w ON p.id = w.flow_id
			WHERE
				p. STATUS > 0
			AND p.state = 31
			AND p.gateway_id = #{gatewayId}
			AND p.is_need_clear = 1
			AND w.check_state IN (1, 2)
			AND p.clear_state = 0
        <if test="start != null and end != null">
            AND p.`created_date` BETWEEN #{start} AND #{ end}
        </if>
        <if test="userId != null ">
            AND p.`rec_user_id` =#{userId}
        </if>
	) su
GROUP BY
	su.userId) gp
    </select>
    <select id="merchantClearList" parameterType="Map" resultMap="qrPayFlowDTOMap">
      SELECT
       <![CDATA[
        #{gatewayId} as gateway_id ,
        (case when amt <= 0 then 0 else amt end )  AS recAmountTotal,
	con AS count,
	userId AS rec_user_id,
	m.corporate_name,
	m.BSB,
	m.account_no,
	m.bank_name,
    transAmt as transAmountTotal
    ]]>
    FROM
	(
		SELECT
			count(*) AS con,
			sum(su.amt) AS amt,
			su.userId AS userId,
            sum(su.transAmt) as transAmt
		FROM
			(
				(
					SELECT
						p.rec_amount AS amt,
						p.rec_user_id AS userId,
                        p.trans_amount as transAmt
					FROM
						u_qr_pay_flow p
					LEFT JOIN u_withhold_flow w ON p.id = w.flow_id
					WHERE
						p. STATUS > 0
					AND p.state = 31
					AND p.gateway_id = #{gatewayId}
					AND is_need_clear = 1
                    AND p.clear_state = 0
					AND w.check_state IN (1, 2)
                 <if test="start != null and end != null">
                   AND p.`created_date` BETWEEN #{start} AND #{ end}
                 </if>
                 <if test="userId != null ">
                   AND p.`rec_user_id` =#{userId}
                 </if>
				)
				UNION ALL
					(
						SELECT
							(
								CASE
								WHEN r.settlement_state = 3 THEN
									r.refund_amount - r.not_settlement_amount
								ELSE
									- r.not_settlement_amount
								END
							) AS amt,
							r.org_rec_user_id AS userId,
                            r.refund_amount as transAmt
						FROM
							u_refund_flow r
						WHERE
							r. STATUS > 0
						AND r.state = 2 AND r.settlement_state=3
						AND r.gateway_id = #{gatewayId}
                     <if test="userId != null ">
                        AND r.`org_rec_user_id` =#{userId}
                     </if>
					)
			) su
		GROUP BY
			su.userId
	) kk
    LEFT JOIN u_merchant m ON kk.userId = m.user_id

    </select>
    <select id="countApiPlatformClear" parameterType="Map" resultType="Integer">
        SELECT
            count(*)
        FROM
            (
                SELECT
                    mer.platform_id
                FROM
                    u_qr_pay_flow qr
                LEFT JOIN u_access_merchant mer ON qr.merchant_id = mer.id
                <trim prefix="WHERE" prefixOverrides="AND|OR">
                     <![CDATA[ qr.access_party_server_fee > 0
                        AND qr. STATUS > 0]]>
                    <if test="state != null">
                        AND qr.`state`=#{state}
                    </if>
                    <if test="platformId != null">
                        AND mer.`platform_id`=#{platformId}
                    </if>
                    <if test="orgAccPltFeeClearState != null">
                        AND qr.`acc_plt_fee_clear_state`=#{orgAccPltFeeClearState}
                    </if>
                    <if test="orderSources != null">
                        <foreach collection="orderSources" item="orderSource" separator="," open="and qr.order_source in(" close=")">
                            #{orderSource}
                        </foreach>
                    </if>
                    <if test="start != null and end != null">
                        AND qr.`created_date` BETWEEN #{start} AND #{ end}
                    </if>
                </trim>
                GROUP BY
                   mer.platform_id
            ) i
    </select>
    <update id="addApiPlatformClearBatchId" parameterType="Map" >
        UPDATE u_qr_pay_flow
        <set>
            <if test="batchId != null">
                `acc_plt_fee_clear_batch`=#{batchId},
            </if>
            <if test="accPltFeeClearState != null">
                `acc_plt_fee_clear_state`=#{accPltFeeClearState},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <![CDATA[access_party_server_fee > 0
            And status > 0]]>
            <if test="orgAccPltFeeClearState != null">
                AND `acc_plt_fee_clear_state`=#{orgAccPltFeeClearState}
            </if>
            <if test="orgBatchId != null">
                AND `acc_plt_fee_clear_batch`=#{orgBatchId}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="platformId != null">
                AND merchant_id in (select id from u_access_merchant where  `platform_id`=#{platformId})
            </if>
            <if test="orderSources != null">
                <foreach collection="orderSources" item="orderSource" separator="," open="and order_source in(" close=")">
                    #{orderSource}
                </foreach>
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
        </trim>
    </update>

    <select id="apiPlatformClearList" parameterType="Map" resultMap="qrPayFlowDTOMap">
        SELECT
        mer.platform_id as platformId,
        mer.account_name AS bank_name,
        mer.account_no,
        mer.bsb,
        mer.name AS corporate_name,
        sum(IFNULL(qr.trans_amount, 0)) AS transAmountTotal,
        sum(IFNULL(qr.access_party_server_fee,0)) AS recAmountTotal,
        count(*) AS count
        FROM
        u_qr_pay_flow qr
        LEFT JOIN u_access_merchant mer ON qr.merchant_id = mer.id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <![CDATA[ qr.access_party_server_fee > 0
                        AND qr. STATUS > 0]]>
            <if test="state != null">
                AND qr.`state`=#{state}
            </if>
            <if test="platformId != null">
                AND mer.`platform_id`=#{platformId}
            </if>
            <if test="orgAccPltFeeClearState != null">
                AND qr.`acc_plt_fee_clear_state`=#{orgAccPltFeeClearState}
            </if>
            <if test="orderSources != null">
                <foreach collection="orderSources" item="orderSource" separator="," open="and qr.order_source in(" close=")">
                    #{orderSource}
                </foreach>
            </if>
            <if test="start != null and end != null">
                AND qr.`created_date` BETWEEN #{start} AND #{ end}
            </if>
        </trim>
        GROUP BY
        mer.platform_id,
        mer.account_name,
        mer.account_no,
        mer.bsb,
        mer.name
    </select>
    <select id="getApiPlatformClearDetail" parameterType="Map" resultMap="qrPayFlowDTOMap">
        SELECT
        qr.*,mer.name as corporate_name,payUser.phone
        FROM
        u_qr_pay_flow qr
        LEFT JOIN u_access_merchant mer ON qr.merchant_id = mer.id
        left join u_user payUser on payUser.id = qr.pay_user_id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <![CDATA[ qr.access_party_server_fee > 0
                        AND qr. STATUS > 0]]>
            <if test="state != null">
                AND qr.`state`=#{state}
            </if>
            <if test="platformId != null">
                AND mer.`platform_id`=#{platformId}
            </if>
            <if test="orgAccPltFeeClearState != null">
                AND qr.`acc_plt_fee_clear_state`=#{orgAccPltFeeClearState}
            </if>
            <if test="  orderSources != null">
                <foreach collection="orderSources" item="orderSource" separator="," open="and qr.order_source in(" close=")">
                    #{orderSource}
                </foreach>
            </if>
            <if test="start != null and end != null">
                AND qr.`created_date` BETWEEN #{start} AND #{ end}
            </if>
        </trim>
    </select>

    <select id="wholeMerchantOrderSearchCount" parameterType="java.util.Map" resultType="int">
        SELECT
            COUNT(DISTINCT pay.id)
        FROM
            u_qr_pay_flow pay
        WHERE pay.status = 1 AND (pay.state = 1 OR pay.state = 31) AND pay.merchant_id = #{merchantId} AND pay.sale_type IN (1, 2)
        <if test="orderNo != null">
            AND pay.trans_no  LIKE CONCAT('%', #{orderNo},'%')
        </if>
        <if test="start != null and end != null">
            AND pay.`created_date` BETWEEN #{start} AND #{ end}
        </if>
    </select>

    <select id="wholeMerchantOrderSearch" parameterType="java.util.Map" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            pay.trans_no orderNo,
            pay.whole_sales_amount transAmount,
            pay.whole_sales_discount orderWholeSalesDiscount,
            FROM_UNIXTIME(pay.created_date/1000,'%h:%i %d-%m-%Y') createdDate,
            pay.whole_sales_discount wholeSalesDiscount,
            pay.credit_order_no creditOrderNo,
            pay.sale_type saleType,
            pay.trans_type transType
        FROM
            u_qr_pay_flow pay
        WHERE pay.status = 1 AND (pay.state = 1 OR pay.state = 31) AND pay.merchant_id = #{merchantId} AND pay.sale_type IN (1, 2)
        <if test="orderNo != null">
            AND pay.trans_no  LIKE CONCAT('%', #{orderNo},'%')
        </if>
        <if test="start != null and end != null">
            AND pay.`created_date` BETWEEN #{start} AND #{ end}
        </if>
        ORDER BY pay.created_date DESC
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <update id="rollbackClearDetail" >
        update u_qr_pay_flow set clear_state = 0 ,clear_time = null , modified_date = #{time} where
        batch_id =  #{batchId} and rec_user_id = #{userId}
    </update>

    <select id="getUnClearedList" parameterType="Map" resultMap="qrPayFlowDTOMap">
        SELECT
            *
        FROM
            (
                SELECT
                    qr.trans_no,
                    qr.trans_amount,
                    qr.clear_amount,
                    qr.created_date,
                    qr.sale_type,
                    qr.clear_state,
                    qr.id
                FROM
                    u_qr_pay_flow qr
        <trim prefix="WHERE" prefixOverrides="AND|OR">
                qr.sale_type != 1
            <if test="payUserId != null">
                AND `pay_user_id`=#{payUserId}
            </if>
            <if test="payUserType != null">
                AND `pay_user_type`=#{payUserType}
            </if>
            <if test="payAccountType != null">
                AND `pay_account_type`=#{payAccountType}
            </if>
            <if test="recUserId != null">
                AND `rec_user_id`=#{recUserId}
            </if>
            <if test="recUserType != null">
                AND `rec_user_type`=#{recUserType}
            </if>
            <if test="recAccountType != null">
                AND `rec_account_type`=#{recAccountType}
            </if>
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="isNeedClear != null">
                AND `is_need_clear`=#{isNeedClear}
            </if>
            <if test="clearState != null">
                AND `clear_state`=#{clearState}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="start != null and end != null">
                AND `created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="creditOrderNo != null">
                AND `credit_order_no`=#{creditOrderNo}
            </if>
            <if test="transNo != null">
                AND `trans_no`=#{transNo}
            </if>
            <if test="stateList != null">
                AND `state` in
                <foreach collection="stateList" item="state" open="(" separator="," close=")">
                    #{state}
                </foreach>
            </if>
            <if test="isWholeSale != null">
                AND `sale_type` in (1,2)
            </if>
            <if test="notWholeSale != null">
                AND `sale_type` in (0,2)
            </if>
            <if test="queryTransNo != null">
                AND `trans_no` like concat('%',#{queryTransNo},'%')
            </if>
            <choose>
                <when test="status != null">And status = #{status}</when>
                <otherwise><![CDATA[And status > 0]]></otherwise>
            </choose>

            <if test="clearStart != null and clearEnd != null">
                AND `clear_time` BETWEEN #{clearStart} AND #{ clearEnd}
            </if>
        </trim>
                UNION ALL
                    SELECT
                        ws.id AS trans_no,
                        amount as trans_amount,
                        ws.settlement_amount AS clear_amount,
                        ws.pass_time as created_date,
                        1 as sale_type,
                        ws.settlement_state as clear_state,
                        ws.id as id
                    FROM
                        u_whole_sales_flow ws
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="merchantId != null">
                AND `merchant_id`=#{merchantId}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="state != null">
                AND `state`=#{state}
            </if>
            <if test="settlementTime != null">
                AND `settlement_time`=#{settlementTime}
            </if>
            <if test="clearStart != null and clearEnd != null">
                AND `settlement_time` BETWEEN #{clearStart} AND #{ clearEnd}
            </if>
            <if test="settlementState != null">
                AND `settlement_state`=#{settlementState}
            </if>
            <if test="start != null and end != null">
                AND `pass_time` BETWEEN #{start} AND #{ end}
            </if>
            <if test="modifiedStart != null and modifiedEnd != null">
                AND `modified_date` BETWEEN #{modifiedStart} AND #{ modifiedEnd}
            </if>
            <if test="passTimeStart != null and passTimeEnd != null">
                AND `pass_time` BETWEEN #{passTimeStart} AND #{ passTimeEnd}
            </if>
            <if test="approveState != null">
                AND `approve_state`=#{approveState}
            </if>
            <if test="orderType != null">
                AND `order_type`=#{orderType}
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            <if test="checkState != null">
                AND `check_state`=#{checkState}
            </if>
            <if test="checkTime != null">
                AND `check_time`=#{checkTime}
            </if>
            <if test="queryTransNo != null">
                AND `id` like concat('%',#{queryTransNo},'%')
            </if>
        </trim>
                ) al
                ORDER BY  al.created_date desc
            <if test="pc != null">
                LIMIT ${pc.startIndex}, ${pc.pageSize}
            </if>

    </select>


    <select id="getOperationTransData" parameterType="Map" resultMap="qrPayFlowDTOMap">
        (
            SELECT
                p.normal_sale_amount AS trans_amount,
                p.rec_amount AS rec_amount,
                FROM_UNIXTIME(p.created_date / 1000, #{format}) trans_time
            FROM
                u_qr_pay_flow p
            WHERE
                p.status = 1
            AND p.state IN (1, 31)
            AND p.sale_type IN (0, 2)
            AND p.`created_date` between #{start} AND #{ end}
            AND p.merchant_id = #{merchantId}
        )
	UNION ALL
		(
			SELECT
				w.amount AS trans_amount,
				w.settlement_amount AS rec_amount,
				FROM_UNIXTIME(w.created_date / 1000, #{format}) trans_time
			FROM
				u_whole_sales_flow w
			WHERE
				w.`status` = 1
			AND w.state = 1
			AND w.merchant_id = #{merchantId}
			AND w.`created_date` between #{start} AND #{ end}
		)
    </select>
    <select id="getOperationClearData" parameterType="Map" resultMap="qrPayFlowDTOMap">
        (
            SELECT
                p.trans_amount AS trans_amount,
                p.rec_amount AS rec_amount,
                FROM_UNIXTIME(p.clear_time / 1000, #{format}) trans_time
            FROM
                u_qr_pay_flow p
            WHERE
                p. STATUS > 0
            AND p.state IN (1, 31)
            AND p.clear_state = 1
            AND p.sale_type IN (0, 2)
            AND p.`clear_time` between #{start} AND #{ end}
            AND p.merchant_id = #{merchantId}
        )
	    UNION ALL
		(
			SELECT
				w.amount AS trans_amount,
				w.settlement_amount AS rec_amount,
				FROM_UNIXTIME(w.settlement_time / 1000, #{format}) trans_time
			FROM
				u_whole_sales_flow w
			WHERE
				w.`status` > 0
			AND w.state = 1
			AND w.settlement_state = 1
			AND w.merchant_id = #{merchantId}
			AND w.`settlement_time` between #{start} AND #{ end}
		)
    </select>
    <select id="countDetails" parameterType="Map" resultType="Integer">
        select count(*) from (
        select (case when trans_type in  ('0', '2', '4') then 0 else 1 end) as  payType,trans_amount,created_date,charge as fee,trans_amount+charge as payAmount,'0' as showType from u_recharge_flow
        where user_id =#{userId} and state in (21,31)
        <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        UNION ALL
        select (case when trans_type in  ('0', '2', '4') then 0 else 1 end) as  payType,trans_amount,created_date,fee,pay_amount,'1' as showType from u_qr_pay_flow where pay_user_id=#{userId} and
        state in (21,31)
        <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        UNION ALL
        select (case when trans_type in  ('0', '2', '4') then 0 else 1 end) as  payType,trans_amount,created_date,fee,pay_amount,'2' as showType from u_qr_pay_flow where rec_user_id=#{userId} and
        state in (21,31)
        <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        ) kk
    </select>
    <select id="countTransactionRecord" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM u_qr_pay_flow
        WHERE `status` = 1
        AND pay_user_id = #{userId}
        <!--如果交易类型不为null, 触发条件 卡支付/分期付支付-->
        <if test="transType != null">
            AND `trans_type`=#{transType}
        </if>
        <if test="transType == null">
            AND `trans_type` IN (2,22)
        </if>
        <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
    </select>
    <select id="getTransRecord" resultType="com.uwallet.pay.main.model.dto.AppTransactionDetailsDTO">
        SELECT
        q.*,
        FROM_UNIXTIME(q.created_date/1000,'%M,%Y') as displayDate,
        FROM_UNIXTIME(q.created_date/1000,'%M,%Y') as monthYear,
        FROM_UNIXTIME(q.created_date/1000,'%m-%Y') as monthYearStr,
        IFNULL(m.`logo_url`,'') as logo_url,
        IFNULL(m.`practical_name`,'') as trading_name,
        q.`state` as `trans_state`,
        s.`en_name` as `transTypeStr`

        FROM u_qr_pay_flow q

        LEFT JOIN `u_merchant` m ON q.`merchant_id` = m.`id`
        LEFT JOIN `u_static_data` s ON q.`trans_type` = s.`value` and s.code = 'transType' and s.`status`=1
        WHERE q.`status` = 1
        AND q.`is_show` = 1
        AND q.pay_user_id = #{userId}
        <!--如果交易类型不为null, 触发条件 卡支付/分期付支付-->
        <if test="transType != null">
            AND q.`trans_type`=#{transType}
        </if>
        <if test="transType == null">
            AND q.`trans_type` IN (2,22)
        </if>
        <if test="start != null and end != null">
            AND q.`created_date` BETWEEN #{start} AND #{ end}
        </if>
        order by  q.`created_date` desc
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <select id="getRecordDetail" resultMap="qrPayFlowDTOMap">
        SELECT
        q.*,
        IFNULL(m.`logo_url`,'') as logo_url,
        (
        CASE
        WHEN q.order_source = 0 THEN
        IFNULL( m.`practical_name`, '' )
        WHEN q.order_source = 1 THEN
        IFNULL( am.`practical_name`, '' ) ELSE ''
        END
        ) AS trading_name
        FROM u_qr_pay_flow q
        LEFT JOIN `u_merchant` m ON q.`merchant_id` = m.`id`
        LEFT JOIN `u_api_merchant` am ON q.`merchant_id` = am.`id`
        WHERE q.`status` = 1
        and (q.`id` = #{id} or q.`credit_order_no` = #{creditNo})
    </select>
    <update id="updateRecordIsShow">
        update u_qr_pay_flow set
        `is_show` = 0,
        `ip` = #{ip},
        `modified_date` = #{time},
        `modified_by` = #{userId}
        where `id` = #{id} and `status`=1
    </update>

    <select id="findBatchAmountOutDoubtFlow"  resultMap="qrPayFlowDTOMap">
        select * from u_qr_pay_flow qf WHERE qf.state in (10, 13)
        <![CDATA[AND qf.created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        AND status > 0 ]]>
    </select>


    <select id="countDistinctMerchant" parameterType="map" resultType="int">
        SELECT COUNT(DISTINCT q.merchant_id)
        FROM u_qr_pay_flow q left join u_merchant m on q.merchant_id=m.id
        WHERE q.status > 0
        AND (q.state = 1 OR q.state = 31)
        <if test="start != null and end != null">
            AND q.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="city != null">
            AND m.city=#{city}
        </if>
    </select>

    <resultMap id="orderReportMap" type="com.uwallet.pay.main.model.dto.OrderReportDTO">
        <id property="merchantId" jdbcType="BIGINT" column="merchant_id"/>
        <association property="merchantTotalWholeSalesAmount" column="merchant_id" javaType="java.math.BigDecimal" select="selectWholeSaleSumAmount"/>
    </resultMap>
    <select id="selectWholeSaleSumAmount" parameterType="map" resultType="java.math.BigDecimal">
        SELECT SUM(amount) FROM u_whole_sales_flow WHERE status > 0 AND state = 1 AND merchant_id = #{merchant_id}
    </select>

    <select id="getOrderReport" parameterType="map" resultMap="orderReportMap">
        SELECT
        t1.merchant_id,
        IFNULL(t2.practical_name, '') AS merchantName,
        t1.rec_user_id AS recUserId,

        SUM(CASE WHEN t1.sale_type = 0 THEN 1 ELSE 0 END) AS basicSalesOrderQuantity,
        SUM(CASE WHEN t1.sale_type = 0 THEN t1.trans_amount ELSE 0 END) AS basicSalesOrderAmount,
        SUM(CASE WHEN t1.sale_type = 1 THEN 1 ELSE 0 END) AS wholeSalesOrderQuantity,
        SUM(CASE WHEN t1.sale_type = 1 THEN t1.trans_amount ELSE 0 END) AS wholeSalesOrderAmount,
        SUM(CASE WHEN t1.sale_type = 2 THEN 1 ELSE 0 END) AS mixSalesOrderQuantity,
        SUM(CASE WHEN t1.sale_type = 2 THEN t1.trans_amount ELSE 0 END) AS mixSalesOrderAmount,
        SUM(t1.red_envelope_amount) AS redEnvelopeAmount,

        SUM(CASE WHEN t1.sale_type = 0 AND t1.trans_type = 2 THEN t1.trans_amount ELSE 0 END) AS basicSalesOrderAmountByCard,
        SUM(CASE WHEN t1.sale_type = 0 AND t1.trans_type = 2 THEN t1.pay_amount ELSE 0 END) AS basicSalesCustomerActualPaymentAmountByCard,
        SUM(CASE WHEN t1.sale_type = 0 AND t1.trans_type = 2 THEN t1.rec_amount ELSE 0 END) AS basicSalesNeedSettledAmountByCard,
        SUM(CASE WHEN t1.sale_type = 0 AND t1.trans_type = 22 THEN t1.trans_amount ELSE 0 END) AS basicSalesOrderAmountByInstalment,
        SUM(CASE WHEN t1.sale_type = 0 AND t1.trans_type = 22 THEN t1.pay_amount ELSE 0 END) AS basicSalesCustomerActualPaymentAmountByInstalment,
        SUM(CASE WHEN t1.sale_type = 0 AND t1.trans_type = 22 THEN t1.rec_amount ELSE 0 END) AS basicSalesNeedSettledAmountByInstalment,

        SUM(CASE WHEN t1.sale_type = 1 AND t1.trans_type = 2 THEN t1.trans_amount ELSE 0 END) AS wholeSalesOrderAmountByCard,
        SUM(CASE WHEN t1.sale_type = 1 AND t1.trans_type = 2 THEN t1.pay_amount ELSE 0 END) AS wholeSalesCustomerActualPaymentAmountByCard,
        SUM(CASE WHEN t1.sale_type = 1 AND t1.trans_type = 22 THEN t1.trans_amount ELSE 0 END) AS wholeSalesOrderAmountByInstalment,
        SUM(CASE WHEN t1.sale_type = 1 AND t1.trans_type = 22 THEN t1.pay_amount ELSE 0 END) AS wholeSalesCustomerActualPaymentAmountByInstalment,

        SUM(CASE WHEN t1.sale_type = 2 AND t1.trans_type = 2 THEN t1.trans_amount ELSE 0 END) AS mixSalesOrderAmountByCard,
        SUM(CASE WHEN t1.sale_type = 2 AND t1.trans_type = 2 THEN t1.pay_amount ELSE 0 END) AS mixSalesCustomerActualPaymentAmountByCard,
        SUM(CASE WHEN t1.sale_type = 2 AND t1.trans_type = 2 THEN t1.rec_amount ELSE 0 END) AS mixSalesNeedSettledAmountByCard,
        SUM(CASE WHEN t1.sale_type = 2 AND t1.trans_type = 22 THEN t1.trans_amount ELSE 0 END) AS mixSalesOrderAmountByInstalment,
        SUM(CASE WHEN t1.sale_type = 2 AND t1.trans_type = 22 THEN t1.pay_amount ELSE 0 END) AS mixSalesCustomerActualPaymentAmountByInstalment,
        SUM(CASE WHEN t1.sale_type = 2 AND t1.trans_type = 22 THEN t1.rec_amount ELSE 0 END) AS mixSalesNeedSettledAmountByInstalment,
        SUM(t1.whole_sales_amount) AS todayMerchantWholeSalesAmount,
        t2.city
        FROM u_qr_pay_flow t1
        LEFT JOIN u_merchant t2
        ON t1.merchant_id = t2.id
        AND t1.status = t2.status
        WHERE t1.status > 0
        AND (t1.state = 1 OR t1.state = 31)
        <if test="start != null and end != null">
            AND t1.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="city != null">
            AND t2.city=#{city}
        </if>
        <if test="today != null ">
            AND FROM_UNIXTIME(t1.`created_date`/1000,'%Y-%m-%d') = #{today}
        </if>
        GROUP BY t1.merchant_id
        ORDER BY merchantName ASC
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <select id="countPayFlowByCard" parameterType="map" resultType="int">
        SELECT COUNT(DISTINCT(t1.id))
        FROM u_qr_pay_flow t1
        LEFT JOIN u_merchant t2
        ON t1.merchant_id = t2.id
        INNER JOIN  u_user t3
        ON t3.id = t1.pay_user_id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND t1.trans_type = 2 AND t1.status = 1
            <if test="transNo != null">
                AND t1.trans_no LIKE CONCAT('%',#{transNo}, '%')
            </if>
            <if test="state != null">
                AND t1.state = #{state}
            </if>
            <if test="practicalName != null">
                AND t2.practical_name LIKE CONCAT('%', #{practicalName}, '%')
            </if>
            <if test="start != null and end != null">
                AND t1.created_date BETWEEN #{start} AND #{end}
            </if>
            <if test="phone != null ">
                AND t3.phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="userLastName != null ">
                AND t3.user_last_name LIKE CONCAT('%', #{userLastName}, '%')
            </if>
            <if test="userFirstName != null ">
                AND t3.user_first_name LIKE CONCAT('%', #{userFirstName}, '%')
            </if>
            <choose>
                <when test="status != null">AND t1.status = #{status}</when>
                <otherwise><![CDATA[AND t1.status > 0]]></otherwise>
            </choose>
        </trim>
    </select>

    <select id="getPayFlowByCard" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowCardPayDTO">
        SELECT
        DISTINCT(t1.id),
        t1.state,
        t1.trans_no,
        t1.pay_user_id ,
        t2.practical_name,
        t1.trans_amount,
        t1.pay_amount,
        IFNULL(ROUND((t1.base_discount_amount + t1.extra_discount_amount + t1.marking_discount_amount + t1.whole_sales_amount * t1.whole_sales_discount), 2), 0.00) AS discountAmount,
        t1.red_envelope_amount,
        t1.platform_fee,
        t1.rec_amount,
        t1.created_date,
        t1.clear_time,
        t1.sale_type,
        t1.trans_type,
        t1.is_need_clear,
        t3.channel_name,
        t4.check_state,
        t4.check_time,
        t5.user_first_name,
        t5.user_last_name,
        t5.phone,
        t6.error_message
        FROM u_qr_pay_flow t1
        LEFT JOIN u_merchant t2
        ON t1.merchant_id = t2.id
        LEFT JOIN u_gateway t3
        ON t1.gateway_id = t3.type
        LEFT JOIN u_withhold_flow t4
        ON t1.id = t4.flow_id
        AND t1.status = t4.status
        LEFT JOIN u_user t5
        on t1.pay_user_id = t5.id
        left join u_withhold_flow t6 on t6.flow_id=t1.id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND t1.trans_type = 2 AND t1.status = 1
            <if test="transNo != null">
                AND t1.trans_no LIKE CONCAT('%',#{transNo}, '%')
            </if>
            <if test="state != null">
                AND t1.state = #{state}
            </if>
            <if test="practicalName != null">
                AND t2.practical_name LIKE CONCAT('%', #{practicalName}, '%')
            </if>
            <if test="start != null and end != null">
                AND   t1.created_date BETWEEN #{start} AND #{end}
            </if>

            <if test="phone != null ">
                AND t5.phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="userLastName != null ">
                AND t5.user_last_name LIKE CONCAT('%', #{userLastName}, '%')
            </if>
            <if test="userFirstName != null ">
                AND t5.user_first_name LIKE CONCAT('%', #{userFirstName}, '%')
            </if>

            <choose>
                <when test="status != null">AND t1.status = #{status}</when>
                <otherwise><![CDATA[AND t1.status > 0]]></otherwise>
            </choose>
        </trim>
        ORDER BY t1.created_date DESC
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <select id="countPayFlowByInstalment" parameterType="map" resultType="int">
        SELECT COUNT(DISTINCT(t1.id))
        FROM u_qr_pay_flow t1
        LEFT JOIN u_merchant t2
        ON t1.merchant_id = t2.id
        INNER JOIN  u_user t3
        ON t3.id = t1.pay_user_id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND t1.trans_type = 22 AND t1.status = 1
            <if test="transNo != null">
                AND t1.trans_no  LIKE CONCAT('%',#{transNo}, '%')
            </if>
            <if test="state != null">
                AND t1.state = #{state}
            </if>
            <if test="practicalName != null">
                AND t2.practical_name LIKE CONCAT('%', #{practicalName}, '%')
            </if>
            <if test="start != null and end != null">
                AND   t1.created_date BETWEEN #{start} AND #{end}
            </if>
            <if test="phone != null ">
                AND t3.phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="userLastName != null ">
                AND t3.user_last_name LIKE CONCAT('%', #{userLastName}, '%')
            </if>
            <if test="userFirstName != null ">
                AND t3.user_first_name LIKE CONCAT('%', #{userFirstName}, '%')
            </if>
            <choose>
                <when test="status != null">AND t1.status = #{status}</when>
                <otherwise><![CDATA[AND t1.status > 0]]></otherwise>
            </choose>
        </trim>
    </select>

    <select id="getPayFlowByInstalment" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowInstalmentPayDTO">
        SELECT
        DISTINCT(t1.id),
        t1.trans_no,
        t1.pay_user_id,
        t2.practical_name,
        t1.trans_amount,
        t1.pay_amount,
        IFNULL(ROUND((t1.base_discount_amount + t1.extra_discount_amount + t1.marking_discount_amount + t1.whole_sales_amount * t1.whole_sales_discount), 2), 0.00) AS discountAmount,
        t1.red_envelope_amount,
        t1.platform_fee,
        t1.rec_amount,
        t1.created_date,
        t1.clear_time,
        t1.state,
        concat (t3.user_first_name,' ',t3.user_last_name) as userName,
        t3.phone,
        t1.sale_type,
        t1.trans_type,
        t1.is_need_clear,
        t1.credit_order_no,
        t6.error_message,
        t1.refund_amount
        FROM u_qr_pay_flow t1
        LEFT JOIN u_merchant t2
        ON t1.merchant_id = t2.id
        LEFT JOIN u_user t3
        ON t1.pay_user_id = t3.id
        LEFT JOIN u_withhold_flow t6 on t6.flow_id=t1.id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND t1.trans_type = 22 AND t1.status = 1
            <if test="transNo != null">
                AND t1.trans_no LIKE CONCAT('%',#{transNo}, '%')
            </if>
            <if test="state != null">
                AND t1.state = #{state}
            </if>
            <if test="practicalName != null">
                AND t2.practical_name LIKE CONCAT('%', #{practicalName}, '%')
            </if>
            <if test="start != null and end != null">
                AND   t1.created_date BETWEEN #{start} AND #{end}
            </if>
            <if test="phone != null ">
                AND t3.phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="userLastName != null ">
                AND t3.user_last_name LIKE CONCAT('%', #{userLastName}, '%')
            </if>
            <if test="userFirstName != null ">
                AND t3.user_first_name LIKE CONCAT('%', #{userFirstName}, '%')
            </if>
            <choose>
                <when test="status != null">AND t1.status = #{status}</when>
                <otherwise><![CDATA[AND t1.status > 0]]></otherwise>
            </choose>
        </trim>
        ORDER BY t1.created_date DESC
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>
    <update id="changeClearState" parameterType="map">
        update u_qr_pay_flow set
        `clear_state` =  #{newState},
        `modified_date` = #{time}
        where `status`=1 and  `clear_state` =  #{oldState}
        AND `id` in
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="merchantClearMessageList" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        SELECT
           *
        FROM
            u_qr_pay_flow qr
        WHERE
            qr.`status` = 1
        AND qr.state IN (1, 31)
        AND qr.sale_type in (0,2)
        AND qr.is_need_clear = 1
        <![CDATA[ AND qr.rec_amount > 0]]>
<!--        <if test="clearState
!= null">-->
<!--            AND   qr.clear_state = #{clearState}-->
<!--        </if>-->
        <if test="start != null and end != null">
            AND   qr.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="merchantIdList != null">
            AND qr.merchant_id IN
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>

    </select>

    <select id="merchantUnclearDetailCount"  parameterType="map" resultType="int">
        SELECT
        count(*)
        FROM
        u_qr_pay_flow qr
        WHERE
        qr.`status` = 1
        AND qr.state IN (1, 31)
        AND qr.sale_type IN (0, 2)
        AND qr.is_need_clear = 1
        <if test="clearState != null">
            AND   qr.clear_state = #{clearState}
        </if>
        <if test="start != null and end != null">
            AND   qr.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="merchantIdList != null">
            AND qr.merchant_id IN
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="apiMerchantUnclearDetailCount"  parameterType="map" resultType="int">
        SELECT
        count(*)
        FROM
        u_qr_pay_flow qr
        WHERE
        qr.`status` = 1
        AND qr.state IN (104, 31)
        AND qr.sale_type IN (0, 2)
        AND qr.is_need_clear = 1
        <if test="clearState != null">
            AND   qr.clear_state = #{clearState}
        </if>
        <if test="start != null and end != null">
            AND   qr.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="merchantIdList != null">
            AND qr.merchant_id IN
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="merchantUnclearDetailList" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        SELECT
        qr.*,u.phone
        FROM
        u_qr_pay_flow qr
        left join u_user u on qr.pay_user_id = u.id
        WHERE
        qr.`status` = 1
        AND qr.state IN (1, 31)
        AND qr.sale_type in (0,2)
        AND qr.is_need_clear = 1
        <if test="clearState != null">
            AND   qr.clear_state = #{clearState}
        </if>
        <if test="start != null and end != null">
            AND   qr.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="merchantIdList != null">
            AND qr.merchant_id IN
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                qr.${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>
    <select id="apiMerchantUnclearDetailList" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        SELECT
        qr.*,u.phone
        FROM
        u_qr_pay_flow qr
        left join u_user u on qr.pay_user_id = u.id
        WHERE
        qr.`status` = 1
        AND qr.state IN (104, 31)
        AND qr.sale_type in (0,2)
        AND qr.is_need_clear = 1
        <if test="clearState != null">
            AND   qr.clear_state = #{clearState}
        </if>
        <if test="start != null and end != null">
            AND   qr.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="merchantIdList != null">
            AND qr.merchant_id IN
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                qr.${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>
    <select id="clearedDetailTransFlowList"  parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        select qr.*,u.phone from u_clear_flow_detail fd
        left join u_clear_detail d on fd.clear_batch_id = d.clear_batch_id and fd.rec_user_id = d.user_id
        left join u_qr_pay_flow qr on qr.id = fd.flow_id
        left join u_user u on u.id = qr.pay_user_id
        where d.id =   #{id}
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                fd.${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <select id="clearedDetailTransFlowCount" resultType="Integer">
        select count(*) from u_clear_flow_detail fd
        left join u_clear_detail d on fd.clear_batch_id = d.clear_batch_id and fd.rec_user_id = d.user_id
        left join u_qr_pay_flow qr on qr.id = fd.flow_id
        left join u_user u on u.id = qr.pay_user_id
        where d.id =   #{id}
    </select>

    <select id="countMerchantClearListNew" parameterType="Map" resultType="Integer">
        SELECT
            count(*)
        FROM
            (
                SELECT
                    p.rec_amount,
                    p.rec_user_id
                FROM
                    u_qr_pay_flow p
                WHERE
                    p. STATUS > 0
                AND p.state IN (31, 1)
                AND p.is_need_clear = 1
                AND p.sale_type IN (0, 2)
                AND p.clear_state = 0
                AND p.order_source = 0
                <if test="merchantIdList != null">
                    AND p.merchant_id IN
                    <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </if>
                GROUP BY
                    p.rec_user_id
            ) pay
    </select>

    <update id="addQrPayClearBatchIdNew" parameterType="Map" >
        UPDATE u_qr_pay_flow p
        <set>
            <if test="batchId != null">
                `batch_id`=#{batchId},
            </if>
            <if test="clearState != null">
                `clear_state`=#{clearState},
            </if>
            <if test="clearTime != null">
                `clear_time`=#{clearTime},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            p.status = 1
            and  p.rec_amount > 0
            <if test="stateList != null">
                AND p.state IN
                <foreach collection="stateList" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="orderSource != null">
                AND p.order_source =#{orderSource}
            </if>
            <if test="isNeedClear != null">
                AND p.`is_need_clear`=#{isNeedClear}
            </if>
            <if test="orgClearState != null">
                AND p.`clear_state`=#{orgClearState}
            </if>
            <if test="orgBatchId != null">
                AND p.`batch_id`=#{orgBatchId}
            </if>

            <if test="start != null and end != null">
                AND p.`created_date` BETWEEN #{start} AND #{ end}
            </if>
            <if test="merchantIdList != null">
                AND p.merchant_id IN
                <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </trim>
    </update>

    <select id="getClearMerchantListCount" parameterType="Map" resultType="Integer">
SELECT
	count(*)
FROM
	(
		SELECT
			f.merchant_id AS id
		FROM
			u_qr_pay_flow f
		LEFT JOIN u_merchant m ON f.merchant_id = m.id
		WHERE
			f.`status` = 1
		AND m.`status` = 1
		AND f.state IN (1, 31)
		AND f.is_need_clear = 1
		AND f.sale_type in (0,2)
        AND f.order_source = 0
        <if test="city != null">
            AND m.`city`=${city}
        </if>
        <![CDATA[AND f.rec_amount > 0 ]]>
        AND m.id IS NOT NULL
        <if test="clearState != null">
	    	AND f.`clear_state` = #{clearState}
        </if>
        <if test="practicalName != null">
		    AND m.`practical_name` LIKE CONCAT('%', #{practicalName}, '%')
        </if>
        <if test="abn != null">
		    AND m.ABN LIKE CONCAT('%', #{abn}, '%')
        </if>
        <if test="start != null and end != null">
            AND f.`created_date` BETWEEN #{start} AND #{ end}
        </if>
		GROUP BY
			f.merchant_id
	) m

    </select>

    <select id="getMonthlyUserData" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        SELECT
            pay_user_id,
            sum(pay_amount) as pay_amount,
            sum(trans_amount) as trans_amount,
            sum( case when trans_amount - pay_amount  > 0 then trans_amount - pay_amount else 0 end ) as firstAmount,
            sum(fee) as fee

        FROM
            u_qr_pay_flow q
        WHERE
            STATUS = 1
        AND state IN (1, 31)
        AND created_date BETWEEN #{start}
        AND #{end}
        <if test="payUserId != null">
            AND pay_user_id = #{payUserId}
        </if>
        GROUP BY
            pay_user_id;
    </select>
    <select id="countRecordNew" resultType="java.lang.Integer">
        SELECT COUNT(distinct id) FROM u_qr_pay_flow
        WHERE `status` = 1
        and `is_show` = 1
        AND pay_user_id = #{userId}
        <!--如果交易类型不为null, 触发条件 卡支付/分期付支付-->
        <if test="transType != null">
            AND `trans_type`=#{transType}
        </if>
        <if test="transType == null">
            AND `trans_type` IN (2,22)
        </if>
        <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        <if test="amtStart != null and amtEnd != null">
            AND `trans_amount` between #{amtStart} AND #{amtEnd}
        </if>
        <if test="lastDays != null">
            AND `created_date` between #{lastDate} and ${now}
        </if>
    </select>
    <select id="transactionDetailsNew" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        q.id,
        q.trans_type as transType,
        q.`state` as transState,
        q.`pay_amount` as payAmount,
        q.`pay_amount` + q.`donation_amount` + q.`tip_amount` as totalAmount,
        q.`trans_amount` as transAmount,
        q.`merchant_id` as merchantId,
        q.`created_date` as createdDate,
        FROM_UNIXTIME(q.created_date/1000,'%a %d %b %Y') as displayDate,
        IFNULL(m.`logo_url`,'') as logoUrl,
        (
        CASE
        WHEN q.order_source = 0 THEN
        IFNULL( m.`practical_name`, '' )
        WHEN q.order_source = 1 THEN
        IFNULL( am.`practical_name`, '' ) ELSE ''
        END
        ) AS tradingName,
        s.`en_name` as `transTypeStr`
        FROM u_qr_pay_flow q
        <!--left join for querying merchant info-->
        LEFT JOIN `u_merchant` m ON q.`merchant_id` = m.`id`
        LEFT JOIN `u_api_merchant` am ON q.`merchant_id` = am.`id`
        <!--display order type: card or installment -->
        LEFT JOIN `u_static_data` s ON q.`trans_type` = s.`value` and s.code = 'transType' and s.`status`=1
        WHERE q.`status` = 1
        AND q.`is_show` = 1
        AND q.pay_user_id = #{userId}
        <!--如果交易类型不为null, 触发条件 卡支付/分期付支付-->
        <if test="transType != null">
            AND q.`trans_type`=#{transType}
        </if>
        <if test="transType == null">
            AND q.`trans_type` IN (2,22)
        </if>
        <if test="start != null and end != null">
            AND q.`created_date` BETWEEN #{start} AND #{end}
        </if>
        <if test="amtStart != null and amtEnd != null">
            AND q.`trans_amount` between #{amtStart} AND #{amtEnd}
        </if>
        <if test="lastDays != null">
            AND q.`created_date` between #{lastDate} and ${now}
        </if>
        <if test="scs != null and scs.size() > 0">
            ORDER BY
            <foreach collection="scs" item="sc" separator=",">
                ${sc.field} ${sc.order}
            </foreach>
        </if>
        <if test="defaultOrder != null">
            ORDER BY
            q.id DESC
        </if>
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>

    </select>

    <select id="getAMonthNoTransactionUserList" resultType="com.uwallet.pay.main.model.dto.UserDTO">
        SELECT
            u.id,
            u.email,
            u.user_last_name,
            u.user_first_name
        FROM
            ( SELECT max( created_date ) AS created_date, pay_user_id FROM u_qr_pay_flow WHERE `status` = 1 AND state IN ( 1, 31 ) GROUP BY pay_user_id ) f
            LEFT JOIN u_user u ON u.id = f.pay_user_id
        WHERE
            u.user_type = 10
            AND u.STATUS = 1
            AND u.email != ''
            AND f.created_date BETWEEN #{startTime}
            AND #{endTime}
    </select>


    <select id="getNoTransactionUserListByTwoWeeksAgo" resultType="com.uwallet.pay.main.model.dto.UserDTO">
        SELECT
            u.id,
            u.email,
            u.user_last_name,
            u.user_first_name,
            u.
        FROM
            u_user u
            LEFT JOIN ( SELECT f.pay_user_id id FROM u_qr_pay_flow f WHERE f.`status` = 1  and f.state in (1,31) GROUP BY f.pay_user_id ) b ON u.id = b.id
        WHERE
            ( floor(( #{timestamp} - u.created_date )/ 86400000 ) + 1 ) = 14
            AND u.user_type = 10
            AND u.STATUS = 1
            AND b.id IS NULL
    </select>

    <select id="getSuspiciousOrderFlowList"  resultMap="qrPayFlowDTOMap">
        SELECT
            *
        FROM
            u_qr_pay_flow qf
        WHERE
            qf.`status` = 1
            AND qf.`trans_type` = '22'
            AND qf.state = '23'
            <![CDATA[AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000]]>
        ORDER BY
            qf.created_date ASC
            LIMIT 1000
    </select>

    <update id="updateRefundData" parameterType="Map" >
        UPDATE u_qr_pay_flow set
        <if test="modifiedBy != null">
            `modified_by`=#{modifiedBy},
        </if>
        <if test="ip != null">
            `ip`=#{ip},
        </if>
        <if test="refundAmount != null">
            refund_amount = refund_amount + #{refundAmount},
        </if>
        <if test="state != null">
            state = #{state},
        </if>
        <if test="refundState != null">
            `refund_state`=#{refundState},
        </if>
        `modified_date`=#{modifiedDate}

        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <![CDATA[And status > 0]]>
            <if test="id != null">
                AND  `id`=#{id}
            </if>

        </trim>
    </update>

    <select id="countPaidSuccessByUserId"  resultType="int">
        SELECT
            count(*)
        FROM
            u_qr_pay_flow qf
        WHERE
            qf.pay_user_id = #{userId}
            AND qf.`trans_type` = #{transType}
            AND qf.`status` = 1
    </select>

    <select id="countH5MerchantClearList" parameterType="Map" resultType="Integer">
       SELECT
            count(*)
        FROM
            (
                SELECT
                    p.merchant_id
                FROM
                    u_qr_pay_flow p
                WHERE
                    p. STATUS > 0
                AND p.state IN (31, 104)
                AND p.is_need_clear = 1
                AND p.sale_type IN (0, 2)
                AND p.clear_state = 0
                AND p.order_source = 1
                GROUP BY
                    p.merchant_id
                UNION ALL
                    SELECT
                        ro.merchant_id
                    FROM
                        u_refund_order ro
                    WHERE
                        ro. STATUS = 1
                    AND ro.state = 1
                    AND ro.settlement_state = 0
                    AND order_source = 1
                    GROUP BY
                        ro.merchant_id
            ) pay
    </select>
    <select id="getApiMerchantClearListCount" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        (
        SELECT
        m.id AS id
        FROM
        u_api_merchant m
        LEFT JOIN   u_qr_pay_flow f ON f.merchant_id = m.id AND f.order_source = 1
        WHERE
        f.`status` = 1
        AND m.`status` = 1
        AND f.state  = 31
        AND f.is_need_clear = 1
        AND f.sale_type in (0,2)
        <if test="city != null">
            AND m.`city`=${city}
        </if>
        <![CDATA[AND f.rec_amount > 0 ]]>
        AND m.id IS NOT NULL
        <if test="clearState != null">
            AND f.`clear_state` = #{clearState}
        </if>
        <if test="practicalName != null">
            AND m.`practical_name` LIKE CONCAT('%', #{practicalName}, '%')
        </if>
        <if test="merchantId != null">
            AND m.`id` =  #{merchantId}
        </if>
        <if test="abn != null">
            AND m.ABN = #{abn}
        </if>
        <if test="start != null and end != null">
            AND f.`created_date` BETWEEN #{start} AND #{ end}
        </if>
        GROUP BY
        m.id
        ) m
    </select>
    <select id="h5ClearTransDetail" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        select q.*,u.phone,m.practical_name as merchantName ,CONCAT(u.user_first_name," ",u.user_last_name) as tradingName ,
        w.card_no,w.card_cc_type as cardCcType ,w.charge as fee,w.order_amount as firstAmount ,q.clear_time = #{settlementDate}
        FROM u_qr_pay_flow q left join u_api_merchant m on q.merchant_id = m.id
        left join u_user u on u.id = q.pay_user_id
        left join u_withhold_flow w on q.id = w.flow_id
        where q.status = 1 and q.trans_no  in (${transNos})
        order by q.created_date desc
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>
    <update id="rollbackClearDetail2" >
        update u_qr_pay_flow set clear_state = 0 ,clear_time = null , modified_date = #{time} where
        batch_id =  #{batchId} and merchant_id = #{merchantId}
    </update>

    <select id="countPayFlowByInstalmenth5" parameterType="map" resultType="int">
        SELECT COUNT(DISTINCT(t1.id))
        FROM u_qr_pay_flow t1
        LEFT JOIN u_api_merchant t2
        ON t1.merchant_id = t2.id
        INNER JOIN  u_user t3
        ON t3.id = t1.pay_user_id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND t1.trans_type = 22 AND t1.status = 1 AND t1.order_source = 1
            <if test="transNo != null">
                AND t1.trans_no =#{transNo}
            </if>
            <if test='state == "3"'>
                AND t1.state not in (22,2,12,31)
            </if>
            <if test='state == "31"'>
                AND t1.state = 31
            </if>
            <if test='state == "2"'>
                AND t1.state in (22,2,12)
            </if>
            <if test='state == "4"'>
                AND t1.refund_state = 104 AND t1.refund_state = 3
            </if>
            <if test='state == "5"'>
                AND t1.refund_state = 104 AND t1.refund_state = 2
            </if>
            <if test='state == "6"'>
                AND t1.refund_state = 31 AND t1.refund_state = 1
            </if>
            <if test="practicalName != null">
                AND t2.practical_name LIKE CONCAT('%', #{practicalName}, '%')
            </if>
            <if test="start != null and end != null">
                AND t1.created_date BETWEEN #{start} AND #{end}
            </if>
            <if test="phone != null ">
                AND t3.phone = #{phone}
            </if>
            <if test="userLastName != null ">
                AND t3.user_last_name LIKE CONCAT('%', #{userLastName}, '%')
            </if>
            <if test="userFirstName != null ">
                AND t3.user_first_name LIKE CONCAT('%', #{userFirstName}, '%')
            </if>
            <choose>
                <when test="status != null">AND t1.status = #{status}</when>
                <otherwise><![CDATA[AND t1.status > 0]]></otherwise>
            </choose>
        </trim>
    </select>
    <select id="getPayFlowByInstalmenth5" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowInstalmentPayDTO">
        SELECT
        DISTINCT(t1.id),
        t1.trans_no,
        t1.pay_user_id,
        t2.practical_name,
        t1.trans_amount,
        t1.pay_amount,
        IFNULL(ROUND((t1.base_discount_amount + t1.extra_discount_amount + t1.marking_discount_amount + t1.whole_sales_amount * t1.whole_sales_discount), 2), 0.00) AS discountAmount,
        t1.red_envelope_amount,
        t1.platform_fee,
        t1.rec_amount,
        t1.created_date,
        t1.clear_time,
        t1.state,
        concat (t3.user_first_name,' ',t3.user_last_name) as userName,
        t3.phone,
        t1.sale_type,
        t1.trans_type,
        t1.is_need_clear,
        t1.credit_order_no,
        t6.error_message,
        t1.refund_amount,
        t1.refund_state
        FROM u_qr_pay_flow t1
        LEFT JOIN u_api_merchant t2
        ON t1.merchant_id = t2.id
        LEFT JOIN u_user t3
        ON t1.pay_user_id = t3.id
        LEFT JOIN u_withhold_flow t6 on t6.flow_id=t1.id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            AND t1.trans_type = 22 AND t1.status = 1 AND t1.order_source = 1
            <if test="transNo != null">
                AND t1.trans_no =#{transNo}
            </if>
            <if test='state == "3"'>
                AND t1.state not in (22,2,12,31)
            </if>
            <if test='state == "31"'>
                AND t1.state = 31
            </if>
            <if test='state == "2"'>
                AND t1.state in (22,2,12)
            </if>
            <if test='state == "4"'>
                AND t1.refund_state = 104 AND t1.refund_state = 3
            </if>
            <if test='state == "5"'>
                AND t1.refund_state = 104 AND t1.refund_state = 2
            </if>
            <if test='state == "6"'>
                AND t1.refund_state = 31 AND t1.refund_state = 1
            </if>
            <if test="practicalName != null">
                AND t2.practical_name LIKE CONCAT('%', #{practicalName}, '%')
            </if>
            <if test="start != null and end != null">
                AND t1.created_date BETWEEN #{start} AND #{end}
            </if>
            <if test="phone != null ">
                AND t3.phone = #{phone}
            </if>
            <if test="userLastName != null ">
                AND t3.user_last_name LIKE CONCAT('%', #{userLastName}, '%')
            </if>
            <if test="userFirstName != null ">
                AND t3.user_first_name LIKE CONCAT('%', #{userFirstName}, '%')
            </if>
            <choose>
                <when test="status != null">AND t1.status = #{status}</when>
                <otherwise><![CDATA[AND t1.status > 0]]></otherwise>
            </choose>
        </trim>
        ORDER BY t1.created_date DESC
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>

    </select>


    <select id="countUserDetail" resultType="int">
        SELECT
            count(*)
        FROM
            u_qr_pay_flow
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="userId != null">
                AND `pay_user_id`=#{userId}
            </if>
            <if test="transType != null">
                AND `trans_type`=#{transType}
            </if>
            <if test="borrowId != null">
                AND `credit_order_no`=#{borrowId}
            </if>
            <if test="flowId != null">
                AND `id`= #{flowId}
            </if>
            <if test="markingId != null">
                AND `marketing_id`= #{markingId} and state in(1,31)
            </if>
            <choose>
                <when test="status != null">AND status = #{status}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
        </trim>
    </select>


    <select id="listUserDetailOrder" resultType="com.uwallet.pay.main.model.dto.UserDetailPayOrderDTO">
        SELECT
            f.trans_no AS transNo,
            f.whole_sales_discount_amount  wholeDiscountAmount,
            (f.base_discount_amount + f.extra_discount_amount + f.marking_discount_amount)  normalDiscountAmount,
            f.order_source orderSource,
            (CASE WHEN  f.trans_type = 22 THEN  m2.merchant_name ELSE  m.practical_name END) AS merchantName,
            f.trans_amount AS orderAmount,
            ( f.whole_sales_discount_amount + f.base_discount_amount + f.extra_discount_amount + f.marking_discount_amount ) AS discountAmount,
            f.whole_sales_discount AS wholeSalesDiscount,
            f.base_discount AS baseDiscount,
            f.extra_discount AS extraDiscount,
            f.marking_discount AS markingDiscount,
            f.red_envelope_amount AS payoMoney,
            (f.pay_amount + wf.charge) as creditTotalAmt,
            (f.trans_amount - f.red_envelope_amount - f.whole_sales_discount_amount - f.base_discount_amount - f.extra_discount_amount
            - f.marking_discount_amount + f.fee) as cardTotalAmt,
            f.donation_amount AS donationAmount,
            f.tip_amount AS tipAmount,
            (
                CASE
                WHEN f.trans_type = 22
                THEN wf.charge
                WHEN f.trans_type = 2
                THEN f.fee
                ELSE
                0
                END
            ) fee,
            (
                CASE
                WHEN f.trans_type = 22
                THEN wf.fee_rate
                WHEN f.trans_type = 2
                THEN f.rate
                ELSE
                0
                END
            ) rate,
            ( f.pay_amount + f.tip_amount + f.donation_amount ) AS totalAmount,
            f.state,
            f.card_id AS cardId,
            f.created_date as paidTime,
            wf.card_no AS cardNo,
            wf.card_cc_type as cardCcType,
            wf.error_message AS errorMessage,
            wf.trans_amount as creditFirstPayAmt,
            wf.order_amount firstPeriodAmt,
            b.period_quantity allPeriod,
            f.credit_order_no borrowId,
            f.trans_type transType
        FROM
            u_qr_pay_flow f
        LEFT JOIN u_merchant m ON m.id = f.merchant_id
        LEFT JOIN u_withhold_flow wf ON wf.flow_id = f.id
        LEFT JOIN uwallet_credit.u_borrow b ON b.id = f.credit_order_no
        LEFT JOIN uwallet_credit.u_merchant m2 ON m2.id = f.merchant_id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="userId != null">
                AND f.`pay_user_id`=#{userId}
            </if>
            <if test="transType != null">
                AND f.`trans_type`=#{transType}
            </if>
            <if test="start != null and end != null">
                AND f.`created_date` BETWEEN #{start} AND #{end}
            </if>
            <if test="borrowId != null">
                AND f.`credit_order_no`=#{borrowId}
            </if>
            <if test="flowId != null">
                AND f.`id`= #{flowId}
            </if>
            <if test="markingId != null">
                AND f.`marketing_id`= #{markingId} and f.state in(1,31)
            </if>
            <choose>
                <when test="status != null">AND f.status = #{status}</when>
                <otherwise><![CDATA[AND f.status > 0]]></otherwise>
            </choose>
        </trim>
        ORDER BY f.created_date desc
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>
    <select id="findMaxUserUseById" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        SELECT
            *
        FROM
            u_qr_pay_flow
        WHERE
            pay_user_id = #{userId}
        AND trans_type = #{transType}
        and `status`=1
        ORDER BY created_date DESC LIMIT 0,1
    </select>

    <select id="apiMerchantClearMessageList" parameterType="map" resultType="com.uwallet.pay.main.model.dto.QrPayFlowDTO">
        SELECT
        *
        FROM
        u_qr_pay_flow qr
        WHERE
        qr.`status` = 1
        AND qr.state IN (104, 31)
        AND qr.sale_type in (0,2)
        AND qr.is_need_clear = 1
        <![CDATA[ AND qr.rec_amount > 0]]>
        <if test="start != null and end != null">
            AND   qr.created_date BETWEEN #{start} AND #{end}
        </if>
        <if test="merchantIdList != null">
            AND qr.merchant_id IN
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>

    </select>

</mapper>
