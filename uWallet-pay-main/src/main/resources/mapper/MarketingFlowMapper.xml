<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uwallet.pay.main.dao.MarketingFlowDAO">

  <resultMap id="marketingFlowMap" type="com.uwallet.pay.main.model.entity.MarketingFlow">
    <id property="id" jdbcType="BIGINT" column="id"/>
    <result property="flowId" jdbcType="BIGINT" column="flow_id"/>
    <result property="userId" jdbcType="BIGINT" column="user_id"/>
    <result property="amount" jdbcType="DECIMAL" column="amount"/>
    <result property="direction" jdbcType="TINYINT" column="direction"/>
    <result property="code" jdbcType="VARCHAR" column="code"/>
    <result property="description" jdbcType="VARCHAR" column="description"/>
    <result property="transType" jdbcType="TINYINT" column="trans_type"/>
    <result property="returnMessage" jdbcType="VARCHAR" column="return_message"/>
    <result property="returnCode" jdbcType="VARCHAR" column="return_code"/>
    <result property="remark" jdbcType="VARCHAR" column="remark"/>
    <result property="state" jdbcType="TINYINT" column="state"/>
    <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
    <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
    <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
    <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
    <result property="status" jdbcType="TINYINT" column="status"/>
    <result property="ip" jdbcType="VARCHAR" column="ip"/>
    <result property="marketingId" jdbcType="BIGINT" column="marketing_id"/>
    <result property="marketingManageId" jdbcType="BIGINT" column="marketing_manage_id"/>
  </resultMap>

  <resultMap id="marketingFlowDTOMap" type="com.uwallet.pay.main.model.dto.MarketingFlowDTO" extends="marketingFlowMap"></resultMap>

  <insert id="insert" parameterType="com.uwallet.pay.main.model.entity.MarketingFlow">
    INSERT INTO u_marketing_flow (
        <if test="id != null">
            `id`
        </if>
        <if test="flowId != null">
            ,`flow_id`
        </if>
        <if test="userId != null">
            ,`user_id`
        </if>
        <if test="amount != null">
            ,`amount`
        </if>
        <if test="direction != null">
            ,`direction`
        </if>
        <if test="code != null">
            ,`code`
        </if>
        <if test="description != null">
            ,`description`
        </if>
        <if test="transType != null">
            ,`trans_type`
        </if>
        <if test="returnMessage != null">
            ,`return_message`
        </if>
        <if test="returnCode != null">
            ,`return_code`
        </if>
        <if test="remark != null">
            ,`remark`
        </if>
        <if test="state != null">
            ,`state`
        </if>
        <if test="createdBy != null">
            ,`created_by`
        </if>
        <if test="createdDate != null">
            ,`created_date`
        </if>
        <if test="modifiedBy != null">
            ,`modified_by`
        </if>
        <if test="modifiedDate != null">
            ,`modified_date`
        </if>
        <if test="status != null">
            ,`status`
        </if>
        <if test="ip != null">
            ,`ip`
        </if>
        <if test="marketingId != null">
          ,`marketing_id`
        </if>
        <if test="marketingManageId != null">
          ,`marketing_manage_id`
        </if>
    ) VALUES (
        <if test="id != null">
              #{id}
        </if>
        <if test="flowId != null">
              ,#{flowId}
        </if>
        <if test="userId != null">
              ,#{userId}
        </if>
        <if test="amount != null">
              ,#{amount}
        </if>
        <if test="direction != null">
              ,#{direction}
        </if>
        <if test="code != null">
              ,#{code}
        </if>
        <if test="description != null">
              ,#{description}
        </if>
        <if test="transType != null">
              ,#{transType}
        </if>
        <if test="returnMessage != null">
              ,#{returnMessage}
        </if>
        <if test="returnCode != null">
              ,#{returnCode}
        </if>
        <if test="remark != null">
              ,#{remark}
        </if>
        <if test="state != null">
              ,#{state}
        </if>
        <if test="createdBy != null">
              ,#{createdBy}
        </if>
        <if test="createdDate != null">
              ,#{createdDate}
        </if>
        <if test="modifiedBy != null">
              ,#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
              ,#{modifiedDate}
        </if>
        <if test="status != null">
              ,#{status}
        </if>
        <if test="ip != null">
              ,#{ip}
        </if>
        <if test="marketingId != null">
          ,#{marketingId}
        </if>
        <if test="marketingManageId != null">
          ,#{marketingManageId}
        </if>

    )
  </insert>

  <insert id="insertList" parameterType="List">
    INSERT INTO u_marketing_flow (
        `id`,
        `flow_id`,
        `user_id`,
        `amount`,
        `direction`,
        `code`,
        `description`,
        `trans_type`,
        `return_message`,
        `return_code`,
        `remark`,
        `state`,
        `created_by`,
        `created_date`,
        `modified_by`,
        `modified_date`,
        `status`,
        `ip`
    ) VALUES
    <foreach collection="list" item="data" separator=",">
      (
        #{data.id},
        #{data.flowId},
        #{data.userId},
        #{data.amount},
        #{data.direction},
        #{data.code},
        #{data.description},
        #{data.transType},
        #{data.returnMessage},
        #{data.returnCode},
        #{data.remark},
        #{data.state},
        #{data.createdBy},
        #{data.createdDate},
        #{data.modifiedBy},
        #{data.modifiedDate},
        #{data.status},
        #{data.ip}
      )
    </foreach>
  </insert>

  <update id="update" parameterType="com.uwallet.pay.main.model.entity.MarketingFlow">
    UPDATE u_marketing_flow
    <set>
        <if test="id != null">
          `id`=#{id},
        </if>
        <if test="flowId != null">
          `flow_id`=#{flowId},
        </if>
        <if test="userId != null">
          `user_id`=#{userId},
        </if>
        <if test="amount != null">
          `amount`=#{amount},
        </if>
        <if test="direction != null">
          `direction`=#{direction},
        </if>
        <if test="code != null">
          `code`=#{code},
        </if>
        <if test="description != null">
          `description`=#{description},
        </if>
        <if test="transType != null">
          `trans_type`=#{transType},
        </if>
        <if test="returnMessage != null">
          `return_message`=#{returnMessage},
        </if>
        <if test="returnCode != null">
          `return_code`=#{returnCode},
        </if>
        <if test="remark != null">
          `remark`=#{remark},
        </if>
        <if test="state != null">
          `state`=#{state},
        </if>
        <if test="createdBy != null">
          `created_by`=#{createdBy},
        </if>
        <if test="createdDate != null">
          `created_date`=#{createdDate},
        </if>
        <if test="modifiedBy != null">
          `modified_by`=#{modifiedBy},
        </if>
        <if test="modifiedDate != null">
          `modified_date`=#{modifiedDate},
        </if>
        <if test="status != null">
          `status`=#{status},
        </if>
        <if test="ip != null">
          `ip`=#{ip},
        </if>
        <if test="marketingId != null">
            `marketing_id`=#{marketingId},
        </if>
        <if test="marketingManageId != null">
            `marketing_manage_id`=#{marketingManageId},
        </if>
    </set>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <choose>
        <when test="status != null ">AND status = #{status.value}</when>
        <otherwise><![CDATA[AND status > 0]]></otherwise>
      </choose>
        AND id = #{id}
    </trim>
  </update>

  <update id="delete" parameterType="Map">
      UPDATE u_marketing_flow
      SET `status`=0,`modified_by`=#{modifiedBy},`modified_date`=#{modifiedDate}
      WHERE id = #{id}
  </update>

  <delete id="pdelete" parameterType="Map">
      DELETE FROM u_marketing_flow
      WHERE id = #{id}
  </delete>

  <select id="count" parameterType="Map" resultType="Integer">
    <![CDATA[
            SELECT COUNT(DISTINCT id) FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
  </select>

  <select id="selectOne" parameterType="Map" resultMap="marketingFlowMap">
    <![CDATA[
            SELECT * FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    LIMIT 1
  </select>

  <select id="selectOneDTO" parameterType="Map" resultMap="marketingFlowDTOMap">
    <![CDATA[
            SELECT * FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    LIMIT 1
  </select>

  <select id="select" parameterType="Map" resultMap="marketingFlowMap">
    <![CDATA[
            SELECT * FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectDTO" parameterType="Map" resultMap="marketingFlowDTOMap">
    <![CDATA[
            SELECT * FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectMap" parameterType="Map" resultType="Map">
    SELECT
    <foreach collection="columns" item="cname" separator="," open="`" close="`">
        ${cname}
    </foreach>
    FROM u_marketing_flow
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <!--统计相关查询-->
  <select id="groupCount" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, COUNT(DISTINCT id) AS `count` FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>

  <select id="sum" parameterType="Map" resultType="Double">
    <![CDATA[
            SELECT IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
  </select>

  <select id="groupSum" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_marketing_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>
  <!--通用查询条件-->
  <sql id="basicParams">
        <if test="id != null">
          AND `id`=#{id}
        </if>
        <if test="flowId != null">
          AND `flow_id`=#{flowId}
        </if>
        <if test="userId != null">
          AND `user_id`=#{userId}
        </if>
        <if test="amount != null">
          AND `amount`=#{amount}
        </if>
        <if test="direction != null">
          AND `direction`=#{direction}
        </if>
        <if test="code != null">
          AND `code`=#{code}
        </if>
        <if test="description != null">
          AND `description`=#{description}
        </if>
        <if test="transType != null">
          AND `trans_type`=#{transType}
        </if>
        <if test="returnMessage != null">
          AND `return_message`=#{returnMessage}
        </if>
        <if test="returnCode != null">
          AND `return_code`=#{returnCode}
        </if>
        <if test="remark != null">
          AND `remark`=#{remark}
        </if>
        <if test="state != null">
          AND `state`=#{state}
        </if>
        <if test="createdBy != null">
          AND `created_by`=#{createdBy}
        </if>
        <if test="start != null and end != null">
          AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        <if test="modifiedBy != null">
          AND `modified_by`=#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
          AND `modified_date`=#{modifiedDate}
        </if>
        <if test="marketingId != null">
          AND `marketing_id`=#{marketingId}
        </if>
        <if test="marketingManageId != null">
          AND `marketing_manage_id`=#{marketingManageId}
        </if>
        <choose>
          <when test="status != null">AND status = #{status}</when>
          <otherwise><![CDATA[AND status > 0]]></otherwise>
        </choose>
        <if test="ip != null">
          AND `ip`=#{ip}
        </if>
      <if test="stateList != null">
          <foreach collection="stateList" item="state" separator="," open="and state in(" close=")">
              #{state}
          </foreach>
      </if>
      <if test="transTypeList != null">
          <foreach collection="transTypeList" item="transType" separator="," open="and trans_type in(" close=")">
              #{transType}
          </foreach>
      </if>
  </sql>


    <select id="findAbnormal" parameterType="Map" resultMap="marketingFlowDTOMap">
        SELECT * FROM u_marketing_flow
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <!-- 通用条件引入 -->
            <include refid="basicParams"/>
        </trim>
        <![CDATA[AND created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        ]]>

    </select>


    <select id="findRollBackDoubtHandle" parameterType="Map" resultMap="marketingFlowDTOMap">
        select * from u_marketing_flow qf WHERE qf.state = 4
        <![CDATA[AND qf.created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        AND status > 0 ]]>
    </select>

    <select id="findRollBackFailHandle" parameterType="Map" resultMap="marketingFlowDTOMap">
        select * from u_marketing_flow qf WHERE qf.state = 5
        <![CDATA[AND qf.created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND qf.modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 5 MINUTE))*1000
        AND status > 0 ]]>
    </select>

    <select id="getUseRedAmountByUserId" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
    SELECT
	 IFNULL( SUM(red_envelope_amount), 0 )
    FROM
        u_qr_pay_flow
    WHERE
        pay_user_id = #{userId}
    AND state IN (1, 31)
    AND `status` = 1
</select>


    <select id="getMarketingCodeUsedLog" parameterType="Map" resultMap="marketingFlowDTOMap">
        SELECT
            u.phone,
            f.created_date
        FROM
            u_marketing_flow f left join  u_qr_pay_flow q on f.flow_id = q.id
            LEFT JOIN u_user u ON u.id = f.user_id
        WHERE
            f.status = 1
            <if test="payState != null">
                AND q.`state`=#{payState}
            </if>
            <if test="marketingManageId != null">
                AND f.`marketing_manage_id`=#{marketingManageId}
            </if>
            <if test="code != null">
                AND f.`code`=#{code}
            </if>
            <if test="direction != null">
                AND f.`direction`=#{direction}
            </if>
            <if test="transType != null">
                AND f.`trans_type`=#{transType}
            </if>
            <if test="state != null">
                AND f.`state`=#{state}
            </if>
        ORDER BY f.created_date desc
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>

    <select id="countUsedLog" parameterType="Map" resultType="Integer">
        SELECT
            count(*)
        FROM
            u_marketing_flow f left join u_qr_pay_flow q on f.flow_id = q.id
        WHERE
            f.status = 1
            <if test="payState != null">
                AND q.`state`=#{payState}
            </if>
            <if test="marketingManageId != null">
                AND f.`marketing_manage_id`=#{marketingManageId}
            </if>
            <if test="code != null">
                AND f.`code`=#{code}
            </if>
            <if test="direction != null">
                AND f.`direction`=#{direction}
            </if>
            <if test="transType != null">
                AND f.`trans_type`=#{transType}
            </if>
            <if test="state != null">
                AND f.`state`=#{state}
            </if>
    </select>


    <select id="getPaidMerchantName" parameterType="Map" resultType="String">
       SELECT
            IFNULL( t3.practical_name, '' )
        FROM
            u_marketing_flow t1
            LEFT JOIN u_qr_pay_flow t2 ON t2.id = t1.flow_id
            LEFT JOIN u_merchant t3 ON t3.id = t2.merchant_id
        WHERE
            t1.`status` = 1
            AND t2.`status` = 1
            AND t1.user_id = #{userId}
            AND t1.marketing_id = #{marketingId}
            AND t1.state = 1
            AND t1.trans_type = 21
            and t1.direction = 1
    </select>



    <select id="getFlowList" parameterType="Map" resultMap="marketingFlowDTOMap">
        SELECT * FROM u_marketing_flow where status = 1 and state = 1 and user_id = #{id} and marketing_manage_id is null
    </select>
    <select id="getRedAmountByUserId" resultType="java.math.BigDecimal">
        SELECT
            SUM(IFNULL(am.balance,0))
        FROM
            uwallet_account.u_marketing_account am
        LEFT JOIN uwallet_pay.u_marketing_management um ON um.id = am.marking_id
        WHERE
             user_id = #{userId} AND am.`status` = 1 and am.state=1 AND um.activity_state IN (0,1) AND um.state = 1
    </select>

    <select id="getUseAvailablePromotionByUserId" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            am.*
        FROM
            uwallet_account.u_marketing_account am
        LEFT JOIN uwallet_pay.u_marketing_management um ON um.id = am.marking_id
        WHERE
             user_id = #{userId}
             <if test="type==1">
                 AND am.`status` = 1 and am.state=1 AND um.activity_state=1 AND um.state = 1
             </if>
            <if test="type==2">
                AND am.`status` = 1 and (am.state=2 or um.activity_state in (2))
            </if>
    </select>
</mapper>
