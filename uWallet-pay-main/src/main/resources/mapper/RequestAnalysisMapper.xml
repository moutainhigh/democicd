<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uwallet.pay.main.dao.RequestAnalysisDAO">

  <resultMap id="requestAnalysisMap" type="com.uwallet.pay.main.model.entity.RequestAnalysis">

    <id property="id" jdbcType="BIGINT" column="id"/>
      <result property="userId" jdbcType="BIGINT" column="user_id"/>
    <result property="requestId" jdbcType="VARCHAR" column="request_id"/>
    <result property="appType" jdbcType="TINYINT" column="app_type"/>
    <result property="gatewayName" jdbcType="VARCHAR" column="gateway_name"/>
    <result property="requestMethod" jdbcType="VARCHAR" column="request_method"/>
    <result property="startTime" jdbcType="BIGINT" column="start_time"/>
      <result property="finishedTime" jdbcType="BIGINT" column="finished_time"/>
    <result property="completedTime" jdbcType="VARCHAR" column="completed_time"/>
    <result property="requestParams" jdbcType="VARCHAR" column="request_params"/>
    <result property="responseData" jdbcType="VARCHAR" column="response_data"/>
    <result property="responseSize" jdbcType="DOUBLE" column="response_size"/>
    <result property="requestIp" jdbcType="VARCHAR" column="request_ip"/>
    <result property="state" jdbcType="TINYINT" column="state"/>
    <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
    <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
    <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
    <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
    <result property="status" jdbcType="TINYINT" column="status"/>
    <result property="ip" jdbcType="VARCHAR" column="ip"/>
  </resultMap>

  <resultMap id="requestAnalysisDTOMap" type="com.uwallet.pay.main.model.dto.RequestAnalysisDTO" extends="requestAnalysisMap"></resultMap>

  <!--通用查询条件-->
  <sql id="basicParams">
        <if test="id != null">
          AND `id`=#{id}
        </if>
        <if test="userId != null">
            AND `user_id`=#{userId}
        </if>
        <if test="requestId != null">
          AND `request_id`=#{requestId}
        </if>
        <if test="appType != null">
          AND `app_type`=#{appType}
        </if>
        <if test="gatewayName != null">
          AND `gateway_name`=#{gatewayName}
        </if>
        <if test="requestMethod != null">
          AND `request_method`=#{requestMethod}
        </if>
        <if test="startTime != null">
          AND `start_time`=#{startTime}
        </if>
        <if test="completedTime != null">
          AND `completed_time`=#{completedTime}
        </if>
        <if test="requestParams != null">
          AND `request_params`=#{requestParams}
        </if>
        <if test="responseData != null">
          AND `response_data`=#{responseData}
        </if>
        <if test="responseSize != null">
          AND `response_size`=#{responseSize}
        </if>
        <if test="requestIp != null">
          AND `request_ip`=#{requestIp}
        </if>
        <if test="state != null">
          AND `state`=#{state}
        </if>
        <if test="createdBy != null">
          AND `created_by`=#{createdBy}
        </if>
        <if test="start != null and end != null">
          AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        <if test="modifiedBy != null">
          AND `modified_by`=#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
          AND `modified_date`=#{modifiedDate}
        </if>
        <choose>
          <when test="status != null">AND status = #{status}</when>
          <otherwise><![CDATA[AND status > 0]]></otherwise>
        </choose>
        <if test="ip != null">
          AND `ip`=#{ip}
        </if>
  </sql>

  <insert id="insert" parameterType="com.uwallet.pay.main.model.entity.RequestAnalysis">
    INSERT INTO u_request_analysis (
        <if test="id != null">
            `id`
        </if>
      <if test="userId != null">
          ,`user_id`
      </if>
        <if test="requestId != null">
            ,`request_id`
        </if>
        <if test="appType != null">
            ,`app_type`
        </if>
        <if test="gatewayName != null">
            ,`gateway_name`
        </if>
        <if test="requestMethod != null">
            ,`request_method`
        </if>
        <if test="startTime != null">
            ,`start_time`
        </if>
        <if test="completedTime != null">
            ,`completed_time`
        </if>
        <if test="requestParams != null">
            ,`request_params`
        </if>
        <if test="responseData != null">
            ,`response_data`
        </if>
        <if test="responseSize != null">
            ,`response_size`
        </if>
        <if test="requestIp != null">
            ,`request_ip`
        </if>
        <if test="state != null">
            ,`state`
        </if>
        <if test="createdBy != null">
            ,`created_by`
        </if>
        <if test="createdDate != null">
            ,`created_date`
        </if>
        <if test="modifiedBy != null">
            ,`modified_by`
        </if>
        <if test="modifiedDate != null">
            ,`modified_date`
        </if>
        <if test="status != null">
            ,`status`
        </if>
        <if test="ip != null">
            ,`ip`
        </if>
    ) VALUES (
        <if test="id != null">
              #{id}
        </if>
      <if test="userId != null">
          ,#{user_id}
      </if>
        <if test="requestId != null">
              ,#{requestId}
        </if>
        <if test="appType != null">
              ,#{appType}
        </if>
        <if test="gatewayName != null">
              ,#{gatewayName}
        </if>
        <if test="requestMethod != null">
              ,#{requestMethod}
        </if>
        <if test="startTime != null">
              ,#{startTime}
        </if>
        <if test="completedTime != null">
              ,#{completedTime}
        </if>
        <if test="requestParams != null">
              ,#{requestParams}
        </if>
        <if test="responseData != null">
              ,#{responseData}
        </if>
        <if test="responseSize != null">
              ,#{responseSize}
        </if>
        <if test="requestIp != null">
              ,#{requestIp}
        </if>
        <if test="state != null">
              ,#{state}
        </if>
        <if test="createdBy != null">
              ,#{createdBy}
        </if>
        <if test="createdDate != null">
              ,#{createdDate}
        </if>
        <if test="modifiedBy != null">
              ,#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
              ,#{modifiedDate}
        </if>
        <if test="status != null">
              ,#{status}
        </if>
        <if test="ip != null">
              ,#{ip}
        </if>
    )
  </insert>

  <insert id="insertList" parameterType="List">
    INSERT INTO u_request_analysis (
        `id`,
        `user_id`,
        `request_id`,
        `app_type`,
        `gateway_name`,
        `request_method`,
        `start_time`,
        `completed_time`,
        `request_params`,
        `response_data`,
        `response_size`,
        `request_ip`,
        `state`,
        `created_by`,
        `created_date`,
        `modified_by`,
        `modified_date`,
        `status`,
        `ip`
    ) VALUES
    <foreach collection="list" item="data" separator=",">
      (
        #{data.id},
        #{data.userId},
        #{data.requestId},
        #{data.appType},
        #{data.gatewayName},
        #{data.requestMethod},
        #{data.startTime},
        #{data.completedTime},
        #{data.requestParams},
        #{data.responseData},
        #{data.responseSize},
        #{data.requestIp},
        #{data.state},
        #{data.createdBy},
        #{data.createdDate},
        #{data.modifiedBy},
        #{data.modifiedDate},
        #{data.status},
        #{data.ip}
      )
    </foreach>
  </insert>

  <update id="update" parameterType="com.uwallet.pay.main.model.entity.RequestAnalysis">
    UPDATE u_request_analysis
    <set>
        <if test="id != null">
          `id`=#{id},
        </if>
        <if test="userId != null">
            `user_id`=#{userId},
        </if>
        <if test="requestId != null">
          `request_id`=#{requestId},
        </if>
        <if test="appType != null">
          `app_type`=#{appType},
        </if>
        <if test="gatewayName != null">
          `gateway_name`=#{gatewayName},
        </if>
        <if test="requestMethod != null">
          `request_method`=#{requestMethod},
        </if>
        <if test="startTime != null">
          `start_time`=#{startTime},
        </if>
        <if test="finishedTime != null">
            `finished_time`=#{finishedTime},
        </if>
        <if test="completedTime != null">
          `completed_time`=#{completedTime},
        </if>
        <if test="requestParams != null">
          `request_params`=#{requestParams},
        </if>
        <if test="responseData != null">
          `response_data`=#{responseData},
        </if>
        <if test="responseSize != null">
          `response_size`=#{responseSize},
        </if>
        <if test="requestIp != null">
          `request_ip`=#{requestIp},
        </if>
        <if test="state != null">
          `state`=#{state},
        </if>
        <if test="createdBy != null">
          `created_by`=#{createdBy},
        </if>
        <if test="createdDate != null">
          `created_date`=#{createdDate},
        </if>
        <if test="modifiedBy != null">
          `modified_by`=#{modifiedBy},
        </if>
        <if test="modifiedDate != null">
          `modified_date`=#{modifiedDate},
        </if>
        <if test="status != null">
          `status`=#{status},
        </if>
        <if test="ip != null">
          `ip`=#{ip},
        </if>
    </set>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <choose>
        <when test="status != null ">AND status = #{status.value}</when>
        <otherwise><![CDATA[AND status > 0]]></otherwise>
      </choose>
        AND id = #{id}
    </trim>
  </update>

  <update id="delete" parameterType="Map">
      UPDATE u_request_analysis
      SET `status`=0,`modified_by`=#{modifiedBy},`modified_date`=#{modifiedDate}
      WHERE id = #{id}
  </update>

  <delete id="pdelete" parameterType="Map">
      DELETE FROM u_request_analysis
      WHERE id = #{id}
  </delete>

  <select id="count" parameterType="Map" resultType="Integer">
    <![CDATA[
            SELECT COUNT(DISTINCT id) FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
  </select>

  <select id="selectOne" parameterType="Map" resultMap="requestAnalysisMap">
    <![CDATA[
            SELECT * FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    LIMIT 1
  </select>

  <select id="selectOneDTO" parameterType="Map" resultMap="requestAnalysisDTOMap">
    <![CDATA[
            SELECT * FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    LIMIT 1
  </select>

  <select id="select" parameterType="Map" resultMap="requestAnalysisMap">
    <![CDATA[
            SELECT * FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectDTO" parameterType="Map" resultMap="requestAnalysisDTOMap">
    <![CDATA[
            SELECT * FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectMap" parameterType="Map" resultType="Map">
    SELECT
    <foreach collection="columns" item="cname" separator="," open="`" close="`">
        ${cname}
    </foreach>
    FROM u_request_analysis
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <!--统计相关查询-->
  <select id="groupCount" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, COUNT(DISTINCT id) AS `count` FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>

  <select id="sum" parameterType="Map" resultType="Double">
    <![CDATA[
            SELECT IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
  </select>

  <select id="groupSum" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_request_analysis
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>

</mapper>
