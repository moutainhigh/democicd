<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uwallet.pay.main.dao.AccountFlowDAO">

  <resultMap id="accountFlowMap" type="com.uwallet.pay.main.model.entity.AccountFlow">
    <id property="id" jdbcType="BIGINT" column="id"/>
    <result property="userId" jdbcType="BIGINT" column="user_id"/>
    <result property="flowId" jdbcType="BIGINT" column="flow_id"/>
    <result property="accountType" jdbcType="TINYINT" column="account_type"/>
    <result property="transAmount" jdbcType="DECIMAL" column="trans_amount"/>
    <result property="feeDirection" jdbcType="TINYINT" column="fee_direction"/>
    <result property="fee" jdbcType="DECIMAL" column="fee"/>
    <result property="oppositeUserId" jdbcType="BIGINT" column="opposite_user_id"/>
    <result property="oppositeAccountType" jdbcType="TINYINT" column="opposite_account_type"/>
    <result property="freezingAmount" jdbcType="DECIMAL" column="freezing_amount"/>
    <result property="orderNo" jdbcType="BIGINT" column="order_no"/>
    <result property="rollBackNo" jdbcType="BIGINT" column="roll_back_no"/>
    <result property="transType" jdbcType="TINYINT" column="trans_type"/>
    <result property="checkState" jdbcType="TINYINT" column="check_state"/>
    <result property="checkTime" jdbcType="BIGINT" column="check_time"/>
    <result property="returnMessage" jdbcType="VARCHAR" column="return_message"/>
    <result property="returnCode" jdbcType="VARCHAR" column="return_code"/>
    <result property="remark" jdbcType="VARCHAR" column="remark"/>
    <result property="state" jdbcType="TINYINT" column="state"/>
    <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
    <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
    <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
    <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
    <result property="status" jdbcType="TINYINT" column="status"/>
    <result property="ip" jdbcType="VARCHAR" column="ip"/>
  </resultMap>

  <resultMap id="accountFlowDTOMap" type="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        <id property="id" jdbcType="BIGINT" column="id"/>
        <result property="userId" jdbcType="BIGINT" column="user_id"/>
        <result property="flowId" jdbcType="BIGINT" column="flow_id"/>
        <result property="accountType" jdbcType="TINYINT" column="account_type"/>
        <result property="transAmount" jdbcType="DECIMAL" column="trans_amount"/>
        <result property="feeDirection" jdbcType="TINYINT" column="fee_direction"/>
        <result property="fee" jdbcType="DECIMAL" column="fee"/>
        <result property="oppositeUserId" jdbcType="BIGINT" column="opposite_user_id"/>
        <result property="oppositeAccountType" jdbcType="TINYINT" column="opposite_account_type"/>
        <result property="freezingAmount" jdbcType="DECIMAL" column="freezing_amount"/>
        <result property="orderNo" jdbcType="BIGINT" column="order_no"/>
        <result property="rollBackNo" jdbcType="BIGINT" column="roll_back_no"/>
        <result property="transType" jdbcType="TINYINT" column="trans_type"/>
        <result property="checkState" jdbcType="TINYINT" column="check_state"/>
        <result property="checkTime" jdbcType="BIGINT" column="check_time"/>
        <result property="returnMessage" jdbcType="VARCHAR" column="return_message"/>
        <result property="returnCode" jdbcType="VARCHAR" column="return_code"/>
        <result property="remark" jdbcType="VARCHAR" column="remark"/>
        <result property="state" jdbcType="TINYINT" column="state"/>
        <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
        <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
        <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
        <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
        <result property="status" jdbcType="TINYINT" column="status"/>
        <result property="ip" jdbcType="VARCHAR" column="ip"/>
  </resultMap>

  <insert id="insert" parameterType="com.uwallet.pay.main.model.entity.AccountFlow">
    INSERT INTO u_account_flow (
        <if test="id != null">
            `id` 
        </if>
        <if test="userId != null">
            ,`user_id` 
        </if>
        <if test="flowId != null">
            ,`flow_id` 
        </if>
        <if test="accountType != null">
            ,`account_type` 
        </if>
        <if test="transAmount != null">
            ,`trans_amount` 
        </if>
        <if test="feeDirection != null">
            ,`fee_direction` 
        </if>
        <if test="fee != null">
            ,`fee` 
        </if>
        <if test="oppositeUserId != null">
            ,`opposite_user_id` 
        </if>
        <if test="oppositeAccountType != null">
            ,`opposite_account_type` 
        </if>
        <if test="freezingAmount != null">
            ,`freezing_amount` 
        </if>
        <if test="orderNo != null">
            ,`order_no` 
        </if>
        <if test="rollBackNo != null">
            ,`roll_back_no`
        </if>
        <if test="transType != null">
            ,`trans_type` 
        </if>
        <if test="checkState != null">
            ,`check_state` 
        </if>
        <if test="checkTime != null">
            ,`check_time` 
        </if>
        <if test="returnMessage != null">
            ,`return_message` 
        </if>
        <if test="returnCode != null">
            ,`return_code` 
        </if>
        <if test="remark != null">
            ,`remark` 
        </if>
        <if test="state != null">
            ,`state` 
        </if>
        <if test="createdBy != null">
            ,`created_by` 
        </if>
        <if test="createdDate != null">
            ,`created_date` 
        </if>
        <if test="modifiedBy != null">
            ,`modified_by` 
        </if>
        <if test="modifiedDate != null">
            ,`modified_date` 
        </if>
        <if test="status != null">
            ,`status` 
        </if>
        <if test="ip != null">
            ,`ip`
        </if>
    ) VALUES (
        <if test="id != null">
              #{id}
        </if>
        <if test="userId != null">
              ,#{userId}
        </if>
        <if test="flowId != null">
              ,#{flowId}
        </if>
        <if test="accountType != null">
              ,#{accountType}
        </if>
        <if test="transAmount != null">
              ,#{transAmount}
        </if>
        <if test="feeDirection != null">
              ,#{feeDirection}
        </if>
        <if test="fee != null">
              ,#{fee}
        </if>
        <if test="oppositeUserId != null">
              ,#{oppositeUserId}
        </if>
        <if test="oppositeAccountType != null">
              ,#{oppositeAccountType}
        </if>
        <if test="freezingAmount != null">
              ,#{freezingAmount}
        </if>
        <if test="orderNo != null">
              ,#{orderNo}
        </if>
        <if test="rollBackNo != null">
              ,#{rollBackNo}
        </if>
        <if test="transType != null">
              ,#{transType}
        </if>
        <if test="checkState != null">
              ,#{checkState}
        </if>
        <if test="checkTime != null">
              ,#{checkTime}
        </if>
        <if test="returnMessage != null">
              ,#{returnMessage}
        </if>
        <if test="returnCode != null">
              ,#{returnCode}
        </if>
        <if test="remark != null">
              ,#{remark}
        </if>
        <if test="state != null">
              ,#{state}
        </if>
        <if test="createdBy != null">
              ,#{createdBy}
        </if>
        <if test="createdDate != null">
              ,#{createdDate}
        </if>
        <if test="modifiedBy != null">
              ,#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
              ,#{modifiedDate}
        </if>
        <if test="status != null">
              ,#{status}
        </if>
        <if test="ip != null">
              ,#{ip}
        </if>
    )
  </insert>

  <insert id="insertList" parameterType="List">
    INSERT INTO u_account_flow (
        `id`,
        `user_id`,
        `flow_id`,
        `account_type`,
        `trans_amount`,
        `fee_direction`,
        `fee`,
        `opposite_user_id`,
        `opposite_account_type`,
        `freezing_amount`,
        `order_no`,
        `roll_back_no`,
        `trans_type`,
        `check_state`,
        `check_time`,
        `return_message`,
        `return_code`,
        `remark`,
        `state`,
        `created_by`,
        `created_date`,
        `modified_by`,
        `modified_date`,
        `status`,
        `ip`
    ) VALUES
    <foreach collection="list" item="data" separator=",">
      (
        #{data.id},
        #{data.userId},
        #{data.flowId},
        #{data.accountType},
        #{data.transAmount},
        #{data.feeDirection},
        #{data.fee},
        #{data.oppositeUserId},
        #{data.oppositeAccountType},
        #{data.freezingAmount},
        #{data.orderNo},
        #{data.rollBackNo},
        #{data.transType},
        #{data.checkState},
        #{data.checkTime},
        #{data.returnMessage},
        #{data.returnCode},
        #{data.remark},
        #{data.state},
        #{data.createdBy},
        #{data.createdDate},
        #{data.modifiedBy},
        #{data.modifiedDate},
        #{data.status},
        #{data.ip}
      )
    </foreach>
  </insert>

  <update id="update" parameterType="com.uwallet.pay.main.model.entity.AccountFlow">
    UPDATE u_account_flow
    <set>
        <if test="id != null">
          `id`=#{id},
        </if>
        <if test="userId != null">
          `user_id`=#{userId},
        </if>
        <if test="flowId != null">
          `flow_id`=#{flowId},
        </if>
        <if test="accountType != null">
          `account_type`=#{accountType},
        </if>
        <if test="transAmount != null">
          `trans_amount`=#{transAmount},
        </if>
        <if test="feeDirection != null">
          `fee_direction`=#{feeDirection},
        </if>
        <if test="fee != null">
          `fee`=#{fee},
        </if>
        <if test="oppositeUserId != null">
          `opposite_user_id`=#{oppositeUserId},
        </if>
        <if test="oppositeAccountType != null">
          `opposite_account_type`=#{oppositeAccountType},
        </if>
        <if test="freezingAmount != null">
          `freezing_amount`=#{freezingAmount},
        </if>
        <if test="orderNo != null">
          `order_no`=#{orderNo},
        </if>
        <if test="rollBackNo != null">
            `roll_back_no`=#{rollBackNo},
        </if>
        <if test="transType != null">
          `trans_type`=#{transType},
        </if>
        <if test="checkState != null">
          `check_state`=#{checkState},
        </if>
        <if test="checkTime != null">
          `check_time`=#{checkTime},
        </if>
        <if test="returnMessage != null">
          `return_message`=#{returnMessage},
        </if>
        <if test="returnCode != null">
          `return_code`=#{returnCode},
        </if>
        <if test="remark != null">
          `remark`=#{remark},
        </if>
        <if test="state != null">
          `state`=#{state},
        </if>
        <if test="createdBy != null">
          `created_by`=#{createdBy},
        </if>
        <if test="createdDate != null">
          `created_date`=#{createdDate},
        </if>
        <if test="modifiedBy != null">
          `modified_by`=#{modifiedBy},
        </if>
        <if test="modifiedDate != null">
          `modified_date`=#{modifiedDate},
        </if>
        <if test="status != null">
          `status`=#{status},
        </if>
        <if test="ip != null">
          `ip`=#{ip},
        </if>
    </set>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <choose>
        <when test="status != null ">AND status = #{status.value}</when>
        <otherwise><![CDATA[AND status > 0]]></otherwise>
      </choose>
        AND id = #{id}
    </trim>
  </update>

  <update id="delete" parameterType="Map">
      UPDATE u_account_flow
      SET `status`=0,`modified_by`=#{modifiedBy},`modified_date`=#{modifiedDate}
      WHERE id = #{id}
  </update>

  <delete id="pdelete" parameterType="Map">
      DELETE FROM u_account_flow
      WHERE id = #{id}
  </delete>

  <select id="count" parameterType="Map" resultType="Integer">
    <![CDATA[
            SELECT COUNT(DISTINCT id) FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">And status = #{status}</when>
            <otherwise><![CDATA[And status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
  </select>

  <select id="selectOne" parameterType="Map" resultMap="accountFlowMap">
    <![CDATA[
            SELECT * FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    LIMIT 1
  </select>

  <select id="selectOneDTO" parameterType="Map" resultMap="accountFlowDTOMap">
    <![CDATA[
            SELECT * FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    LIMIT 1
  </select>

  <select id="select" parameterType="Map" resultMap="accountFlowMap">
    <![CDATA[
            SELECT * FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectDTO" parameterType="Map" resultMap="accountFlowDTOMap">
    <![CDATA[
            SELECT * FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
        <if test="transTypeList != null">
            AND `trans_type` in
            <foreach collection="transTypeList" item="transType" open="(" separator="," close=")">
                #{transType}
            </foreach>
        </if>
        <if test="stateList != null">
            AND `state` in
            <foreach collection="stateList" item="state" open="(" separator="," close=")">
                #{state}
            </foreach>
        </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectMap" parameterType="Map" resultType="Map">
    SELECT
    <foreach collection="columns" item="cname" separator="," open="`" close="`">
        ${cname}
    </foreach>
    FROM u_account_flow
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <!--统计相关查询-->
  <select id="groupCount" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, COUNT(DISTINCT id) AS `count` FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>

  <select id="sum" parameterType="Map" resultType="Double">
    <![CDATA[
            SELECT IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
  </select>

  <select id="groupSum" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_account_flow
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
          <if test="id != null">
            AND `id`=#{id}
          </if>
          <if test="userId != null">
            AND `user_id`=#{userId}
          </if>
          <if test="flowId != null">
            AND `flow_id`=#{flowId}
          </if>
          <if test="accountType != null">
            AND `account_type`=#{accountType}
          </if>
          <if test="transAmount != null">
            AND `trans_amount`=#{transAmount}
          </if>
          <if test="feeDirection != null">
            AND `fee_direction`=#{feeDirection}
          </if>
          <if test="fee != null">
            AND `fee`=#{fee}
          </if>
          <if test="oppositeUserId != null">
            AND `opposite_user_id`=#{oppositeUserId}
          </if>
          <if test="oppositeAccountType != null">
            AND `opposite_account_type`=#{oppositeAccountType}
          </if>
          <if test="freezingAmount != null">
            AND `freezing_amount`=#{freezingAmount}
          </if>
          <if test="orderNo != null">
            AND `order_no`=#{orderNo}
          </if>
        <if test="rollBackNo != null">
            AND `roll_back_no`=#{rollBackNo}
        </if>
          <if test="transType != null">
            AND `trans_type`=#{transType}
          </if>
          <if test="checkState != null">
            AND `check_state`=#{checkState}
          </if>
          <if test="checkTime != null">
            AND `check_time`=#{checkTime}
          </if>
          <if test="returnMessage != null">
            AND `return_message`=#{returnMessage}
          </if>
          <if test="returnCode != null">
            AND `return_code`=#{returnCode}
          </if>
          <if test="remark != null">
            AND `remark`=#{remark}
          </if>
          <if test="state != null">
            AND `state`=#{state}
          </if>
          <if test="createdBy != null">
            AND `created_by`=#{createdBy}
          </if>
          <if test="start != null and end != null">
            AND `created_date` BETWEEN #{start} AND #{ end}
          </if>
          <if test="modifiedBy != null">
            AND `modified_by`=#{modifiedBy}
          </if>
          <if test="modifiedDate != null">
            AND `modified_date`=#{modifiedDate}
          </if>
          <choose>
            <when test="status != null">AND status = #{status}</when>
            <otherwise><![CDATA[AND status > 0]]></otherwise>
          </choose>
          <if test="ip != null">
            AND `ip`=#{ip}
          </if>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>
  
  <select id="selectLatestByFlowId" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
    SELECT * FROM u_account_flow WHERE flow_id = #{flowId}
      <if test="transType != null">
         AND `trans_type`=#{transType}
      </if>
    ORDER BY created_date DESC,modified_date DESC LIMIT 0,1
  </select>

    <update id="updateForConcurrency" parameterType="com.uwallet.pay.main.model.entity.AccountFlow">
        UPDATE u_account_flow
        <set>
            <if test="id != null">
                `id`=#{id},
            </if>
            <if test="userId != null">
                `user_id`=#{userId},
            </if>
            <if test="flowId != null">
                `flow_id`=#{flowId},
            </if>
            <if test="accountType != null">
                `account_type`=#{accountType},
            </if>
            <if test="transAmount != null">
                `trans_amount`=#{transAmount},
            </if>
            <if test="feeDirection != null">
                `fee_direction`=#{feeDirection},
            </if>
            <if test="fee != null">
                `fee`=#{fee},
            </if>
            <if test="oppositeUserId != null">
                `opposite_user_id`=#{oppositeUserId},
            </if>
            <if test="oppositeAccountType != null">
                `opposite_account_type`=#{oppositeAccountType},
            </if>
            <if test="freezingAmount != null">
                `freezing_amount`=#{freezingAmount},
            </if>
            <if test="orderNo != null">
                `order_no`=#{orderNo},
            </if>
            <if test="rollBackNo != null">
                AND `roll_back_no`=#{rollBackNo}
            </if>
            <if test="transType != null">
                `trans_type`=#{transType},
            </if>
            <if test="checkState != null">
                `check_state`=#{checkState},
            </if>
            <if test="checkTime != null">
                `check_time`=#{checkTime},
            </if>
            <if test="returnMessage != null">
                `return_message`=#{returnMessage},
            </if>
            <if test="returnCode != null">
                `return_code`=#{returnCode},
            </if>
            <if test="remark != null">
                `remark`=#{remark},
            </if>
            <if test="state != null">
                `state`=#{state},
            </if>
            <if test="createdBy != null">
                `created_by`=#{createdBy},
            </if>
            <if test="createdDate != null">
                `created_date`=#{createdDate},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
            <if test="status != null">
                `status`=#{status},
            </if>
            <if test="ip != null">
                `ip`=#{ip},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <choose>
                <when test="status != null ">AND status = #{status.value}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            AND id = #{id} AND state != #{state}
        </trim>
    </update>

    <select id="selectAccountRollbackDoubtFlow" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        SELECT * FROM u_account_flow WHERE trans_type IN (15, 16, 17) AND status > 0 AND state in  (0,3);
    </select>

    <select id="selectAccountOutDoubtFlow" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        SELECT * FROM u_account_flow WHERE trans_type IN (12, 13, 14) AND status > 0 AND state in  (0,3);
    </select>

    <select id="selectWalletBooked" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO" parameterType="java.util.Map">
        SELECT * FROM u_account_flow WHERE trans_type IN (19, 20)
        AND status > 0
        <if test="state != null">
            AND `state`=#{state}
        </if>
    </select>

    <select id="selectWalletTransaction" parameterType="java.util.Map" resultType="string">
        SELECT DISTINCT FROM_UNIXTIME(created_date/1000,'%b.%Y') FROM u_account_flow
        WHERE status = 1 AND state = 1 AND trans_type IN (19, 20, 21, 25) AND user_id = #{userId}
        <if test="transactionDate != null">
            AND FROM_UNIXTIME(created_date/1000,'%Y-%m') = #{transactionDate}
        </if>
        GROUP BY FROM_UNIXTIME(created_date/1000,'%Y-%m') ORDER BY FROM_UNIXTIME(created_date/1000,'%Y-%m') DESC
    </select>

    <select id="selectWalletTransactionCount" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(DISTINCT date) FROM (

            SELECT FROM_UNIXTIME(created_date/1000,'%b.%Y') date FROM u_account_flow
            WHERE status = 1 AND state = 1 AND trans_type IN (19, 20, 21, 25) AND user_id = #{userId}
            <if test="transactionDate != null">
                AND FROM_UNIXTIME(created_date / 1000, '%Y-%m') = #{transactionDate}
            </if>
            GROUP BY FROM_UNIXTIME(created_date/1000,'%Y-%m') ORDER BY FROM_UNIXTIME(created_date/1000,'%Y-%m') DESC
        ) transaction_date
    </select>

    <select id="selectWalletTransactionDetail" parameterType="java.util.Map" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        SELECT * FROM u_account_flow
        WHERE status = 1 AND state = 1 AND FROM_UNIXTIME(created_date/1000,'%b.%Y') = #{transactionDate}
        <if test="transType == 0">
            AND trans_type IN (19, 20, 25) AND user_id = #{userId}
        </if>
        <if test="transType == 1">
            AND trans_type IN (21) AND user_id = #{userId}
        </if>
    </select>

    <select id="selectWalletIncomeAndExpend" parameterType="java.util.Map" resultType="java.math.BigDecimal">
        SELECT SUM(trans_amount) FROM u_account_flow
        WHERE status = 1 AND state = 1
        <if test="transactionDate != null">
            AND FROM_UNIXTIME(created_date/1000,'%b.%Y') = #{transactionDate}
        </if>
        <if test="transType == 0">
            AND trans_type IN (19, 20, 25) AND user_id = #{userId}
        </if>
        <if test="transType == 1">
            AND trans_type IN (21) AND user_id = #{userId}
        </if>
    </select>

    <update id="updateAccountFlowByOrderNo" parameterType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        UPDATE u_account_flow
        <set>
            <if test="userId != null">
                `user_id`=#{userId},
            </if>
            <if test="flowId != null">
                `flow_id`=#{flowId},
            </if>
            <if test="accountType != null">
                `account_type`=#{accountType},
            </if>
            <if test="transAmount != null">
                `trans_amount`=#{transAmount},
            </if>
            <if test="feeDirection != null">
                `fee_direction`=#{feeDirection},
            </if>
            <if test="fee != null">
                `fee`=#{fee},
            </if>
            <if test="oppositeUserId != null">
                `opposite_user_id`=#{oppositeUserId},
            </if>
            <if test="oppositeAccountType != null">
                `opposite_account_type`=#{oppositeAccountType},
            </if>
            <if test="freezingAmount != null">
                `freezing_amount`=#{freezingAmount},
            </if>
            <if test="rollBackNo != null">
                `roll_back_no`=#{rollBackNo},
            </if>
            <if test="checkState != null">
                `check_state`=#{checkState},
            </if>
            <if test="checkTime != null">
                `check_time`=#{checkTime},
            </if>
            <if test="returnMessage != null">
                `return_message`=#{returnMessage},
            </if>
            <if test="returnCode != null">
                `return_code`=#{returnCode},
            </if>
            <if test="remark != null">
                `remark`=#{remark},
            </if>
            <if test="state != null">
                `state`=#{state},
            </if>
            <if test="modifiedBy != null">
                `modified_by`=#{modifiedBy},
            </if>
            <if test="modifiedDate != null">
                `modified_date`=#{modifiedDate},
            </if>
            <if test="status != null">
                `status`=#{status},
            </if>
            <if test="ip != null">
                `ip`=#{ip},
            </if>
        </set>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <choose>
                <when test="status != null ">AND status = #{status.value}</when>
                <otherwise><![CDATA[AND status > 0]]></otherwise>
            </choose>
            AND `order_no`=#{orderNo}
            <if test="transTypeList != null">
                AND `trans_type` in
                <foreach collection="transTypeList" item="transType" open="(" separator="," close=")">
                    #{transType}
                </foreach>
            </if>
        </trim>
    </update>


    <select id="selectByFlowId" parameterType="java.util.Map" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        SELECT * FROM u_account_flow
        WHERE status = 1 and  flow_id = #{flowId}
        <if test="transTypeList != null">
        AND `trans_type` in
        <foreach collection="transTypes" item="transType" open="(" separator="," close=")">
            #{transType}
        </foreach>
        </if>
        <if test="states != null">
            AND `state` in
            <foreach collection="states" item="state" open="(" separator="," close=")">
                #{state}
            </foreach>
        </if>
        order by created_date desc limit 1
    </select>
    <select id="getQrPayBatAmtOutRollbackDoubtFlow" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        select * from u_account_flow  WHERE state = 4 and trans_type in (21, 26)
        <![CDATA[AND created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 3 MINUTE))*1000
        AND status > 0 ]]>
    </select>
    <select id="getQrPayBatAmtOutRollbackFailFlow" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        select * from u_account_flow  WHERE state = 5 and trans_type in (21, 26)
        <![CDATA[AND created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 3 MINUTE))*1000
        AND status > 0 ]]>
    </select>
    <select id="getBatchAmountOutDoubtFlow" resultType="com.uwallet.pay.main.model.dto.AccountFlowDTO">
        select * from u_account_flow  WHERE state in (0,3) and trans_type in (21, 26)
        <![CDATA[AND created_date > unix_timestamp(DATE_SUB(NOW(), INTERVAL 8 DAY))*1000
        AND modified_date < unix_timestamp(DATE_SUB(NOW(), INTERVAL 3 MINUTE))*1000
        AND status > 0 ]]>
    </select>

</mapper>
