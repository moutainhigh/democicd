<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uwallet.pay.main.dao.UserInfoUpdateLogDAO">

  <resultMap id="userInfoUpdateLogMap" type="com.uwallet.pay.main.model.entity.UserInfoUpdateLog">
    <id property="id" jdbcType="BIGINT" column="id"/>
    <result property="userId" jdbcType="BIGINT" column="user_id"/>
    <result property="updateId" jdbcType="VARCHAR" column="update_id"/>
    <result property="updateText" jdbcType="VARCHAR" column="update_text"/>
    <result property="createdBy" jdbcType="BIGINT" column="created_by"/>
    <result property="createdDate" jdbcType="BIGINT" column="created_date"/>
    <result property="modifiedBy" jdbcType="BIGINT" column="modified_by"/>
    <result property="modifiedDate" jdbcType="BIGINT" column="modified_date"/>
    <result property="status" jdbcType="TINYINT" column="status"/>
    <result property="ip" jdbcType="VARCHAR" column="ip"/>
    <result property="remarks" jdbcType="VARCHAR" column="remarks"/>
    <result property="data" jdbcType="VARCHAR" column="data"/>
  </resultMap>

  <resultMap id="userInfoUpdateLogDTOMap" type="com.uwallet.pay.main.model.dto.UserInfoUpdateLogDTO" extends="userInfoUpdateLogMap"></resultMap>

  <!--通用查询条件-->
  <sql id="basicParams">
        <if test="id != null">
          AND `id`=#{id}
        </if>
        <if test="userId != null">
          AND `user_id`=#{userId}
        </if>
        <if test="updateId != null">
          AND `update_id`=#{updateId}
        </if>
        <if test="updateText != null">
          AND `update_text`=#{updateText}
        </if>
        <if test="createdBy != null">
          AND `created_by`=#{createdBy}
        </if>
        <if test="start != null and end != null">
          AND `created_date` BETWEEN #{start} AND #{ end}
        </if>
        <if test="modifiedBy != null">
          AND `modified_by`=#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
          AND `modified_date`=#{modifiedDate}
        </if>
        <choose>
          <when test="status != null">AND status = #{status}</when>
          <otherwise><![CDATA[AND status > 0]]></otherwise>
        </choose>
        <if test="ip != null">
          AND `ip`=#{ip}
        </if>
      <if test="remarks != null">
          AND `remarks`=#{remarks}
      </if>
      <if test="data != null">
          AND `data`=#{data}
      </if>
  </sql>

  <insert id="insert" parameterType="com.uwallet.pay.main.model.entity.UserInfoUpdateLog">
    INSERT INTO u_user_info_update_log (
        <if test="id != null">
            `id`
        </if>
        <if test="userId != null">
            ,`user_id`
        </if>
        <if test="updateId != null">
            ,`update_id`
        </if>
        <if test="updateText != null">
            ,`update_text`
        </if>
        <if test="createdBy != null">
            ,`created_by`
        </if>
        <if test="createdDate != null">
            ,`created_date`
        </if>
        <if test="modifiedBy != null">
            ,`modified_by`
        </if>
        <if test="modifiedDate != null">
            ,`modified_date`
        </if>
        <if test="status != null">
            ,`status`
        </if>
        <if test="ip != null">
            ,`ip`
        </if>
      <if test="remarks != null">
          ,`remarks`
      </if>
      <if test="data != null">
          ,`data`
      </if>
    ) VALUES (
        <if test="id != null">
              #{id}
        </if>
        <if test="userId != null">
              ,#{userId}
        </if>
        <if test="updateId != null">
              ,#{updateId}
        </if>
        <if test="updateText != null">
              ,#{updateText}
        </if>
        <if test="createdBy != null">
              ,#{createdBy}
        </if>
        <if test="createdDate != null">
              ,#{createdDate}
        </if>
        <if test="modifiedBy != null">
              ,#{modifiedBy}
        </if>
        <if test="modifiedDate != null">
              ,#{modifiedDate}
        </if>
        <if test="status != null">
              ,#{status}
        </if>
        <if test="ip != null">
              ,#{ip}
        </if>
      <if test="remarks != null">
          ,#{remarks}
      </if>
      <if test="data != null">
          ,#{data}
      </if>
    )
  </insert>

  <insert id="insertList" parameterType="List">
    INSERT INTO u_user_info_update_log (
        `id`,
        `user_id`,
        `update_id`,
        `update_text`,
        `created_by`,
        `created_date`,
        `modified_by`,
        `modified_date`,
        `status`,
        `ip`,
      `remarks`,
      `data`
    ) VALUES
    <foreach collection="list" item="data" separator=",">
      (
        #{data.id},
        #{data.userId},
        #{data.updateId},
        #{data.updateText},
        #{data.createdBy},
        #{data.createdDate},
        #{data.modifiedBy},
        #{data.modifiedDate},
        #{data.status},
        #{data.ip},
        #{data.remarks},
        #{data.data}
      )
    </foreach>
  </insert>

  <update id="update" parameterType="com.uwallet.pay.main.model.entity.UserInfoUpdateLog">
    UPDATE u_user_info_update_log
    <set>
        <if test="id != null">
          `id`=#{id},
        </if>
        <if test="userId != null">
          `user_id`=#{userId},
        </if>
        <if test="updateId != null">
          `update_id`=#{updateId},
        </if>
        <if test="updateText != null">
          `update_text`=#{updateText},
        </if>
        <if test="createdBy != null">
          `created_by`=#{createdBy},
        </if>
        <if test="createdDate != null">
          `created_date`=#{createdDate},
        </if>
        <if test="modifiedBy != null">
          `modified_by`=#{modifiedBy},
        </if>
        <if test="modifiedDate != null">
          `modified_date`=#{modifiedDate},
        </if>
        <if test="status != null">
          `status`=#{status},
        </if>
        <if test="ip != null">
          `ip`=#{ip},
        </if>
        <if test="remarks != null">
            `remarks`=#{remarks},
        </if>
        <if test="data != null">
            `data`=#{data},
        </if>
    </set>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <choose>
        <when test="status != null ">AND status = #{status.value}</when>
        <otherwise><![CDATA[AND status > 0]]></otherwise>
      </choose>
        AND id = #{id}
    </trim>
  </update>

  <update id="delete" parameterType="Map">
      UPDATE u_user_info_update_log
      SET `status`=0,`modified_by`=#{modifiedBy},`modified_date`=#{modifiedDate}
      WHERE id = #{id}
  </update>

  <delete id="pdelete" parameterType="Map">
      DELETE FROM u_user_info_update_log
      WHERE id = #{id}
  </delete>

  <select id="count" parameterType="Map" resultType="Integer">
    <![CDATA[
            SELECT COUNT(DISTINCT id) FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
  </select>

  <select id="selectOne" parameterType="Map" resultMap="userInfoUpdateLogMap">
    <![CDATA[
            SELECT * FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    LIMIT 1
  </select>

  <select id="selectOneDTO" parameterType="Map" resultMap="userInfoUpdateLogDTOMap">
    <![CDATA[
            SELECT * FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    LIMIT 1
  </select>

  <select id="select" parameterType="Map" resultMap="userInfoUpdateLogMap">
    <![CDATA[
            SELECT * FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectDTO" parameterType="Map" resultMap="userInfoUpdateLogDTOMap">
    <![CDATA[
            SELECT * FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <select id="selectMap" parameterType="Map" resultType="Map">
    SELECT
    <foreach collection="columns" item="cname" separator="," open="`" close="`">
        ${cname}
    </foreach>
    FROM u_user_info_update_log
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    <if test="scs != null and scs.size() > 0">
      ORDER BY
      <foreach collection="scs" item="sc" separator=",">
          ${sc.field} ${sc.order}
      </foreach>
    </if>
    <if test="pc != null">
      LIMIT ${pc.startIndex}, ${pc.pageSize}
    </if>
  </select>

  <!--统计相关查询-->
  <select id="groupCount" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, COUNT(DISTINCT id) AS `count` FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>

  <select id="sum" parameterType="Map" resultType="Double">
    <![CDATA[
            SELECT IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
  </select>

  <select id="groupSum" parameterType="Map" resultType="Map">
    <![CDATA[
            SELECT ${group} AS `group`, IFNULL(SUM(${sumfield}),0) AS `sum` FROM u_user_info_update_log
        ]]>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <!-- 通用条件引入 -->
      <include refid="basicParams"/>
    </trim>
    GROUP BY `group`
    ORDER BY `group` ASC
  </select>
    <select id="findUpdateList" resultType="com.uwallet.pay.main.model.dto.UserInfoUpdateLogDTO">
        select l.*,a.real_name creatBy,u.phone,CONCAT(u.user_first_name,' ',u.user_last_name) userName  from  u_user_info_update_log l left join u_admin a on a.id=l.created_by left join u_user u on u.id=l.user_id where l.`status`=1
        <if test="userId != null">
            AND l.`user_id`=#{userId}
        </if>
        <if test="start != null and end != null">
            AND l.created_date BETWEEN #{start} AND #{ end}
        </if>
         order by l.created_date desc
        <if test="pc != null">
            LIMIT ${pc.startIndex}, ${pc.pageSize}
        </if>
    </select>
    <select id="findOneUserInfoUpdateLogMax" resultType="com.uwallet.pay.main.model.dto.UserInfoUpdateLogDTO">
        <![CDATA[
            SELECT * FROM u_user_info_update_log
        ]]>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <!-- 通用条件引入 -->
            <include refid="basicParams"/>
        </trim>
        order by created_date desc
        LIMIT 1
    </select>

</mapper>
